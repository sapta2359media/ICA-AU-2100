/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 138.0, "minX": 0.0, "maxY": 11508.0, "series": [{"data": [[0.0, 178.0], [0.1, 183.0], [0.2, 184.0], [0.3, 185.0], [0.4, 186.0], [0.5, 187.0], [0.6, 187.0], [0.7, 189.0], [0.8, 190.0], [0.9, 191.0], [1.0, 193.0], [1.1, 195.0], [1.2, 195.0], [1.3, 196.0], [1.4, 196.0], [1.5, 197.0], [1.6, 197.0], [1.7, 198.0], [1.8, 198.0], [1.9, 198.0], [2.0, 199.0], [2.1, 199.0], [2.2, 199.0], [2.3, 199.0], [2.4, 200.0], [2.5, 200.0], [2.6, 200.0], [2.7, 201.0], [2.8, 201.0], [2.9, 201.0], [3.0, 202.0], [3.1, 202.0], [3.2, 202.0], [3.3, 202.0], [3.4, 202.0], [3.5, 202.0], [3.6, 202.0], [3.7, 202.0], [3.8, 202.0], [3.9, 202.0], [4.0, 203.0], [4.1, 203.0], [4.2, 203.0], [4.3, 203.0], [4.4, 203.0], [4.5, 203.0], [4.6, 204.0], [4.7, 204.0], [4.8, 204.0], [4.9, 204.0], [5.0, 204.0], [5.1, 204.0], [5.2, 204.0], [5.3, 204.0], [5.4, 204.0], [5.5, 204.0], [5.6, 204.0], [5.7, 205.0], [5.8, 205.0], [5.9, 205.0], [6.0, 205.0], [6.1, 205.0], [6.2, 205.0], [6.3, 205.0], [6.4, 205.0], [6.5, 205.0], [6.6, 205.0], [6.7, 205.0], [6.8, 205.0], [6.9, 205.0], [7.0, 206.0], [7.1, 206.0], [7.2, 206.0], [7.3, 206.0], [7.4, 206.0], [7.5, 206.0], [7.6, 206.0], [7.7, 206.0], [7.8, 206.0], [7.9, 206.0], [8.0, 206.0], [8.1, 207.0], [8.2, 207.0], [8.3, 207.0], [8.4, 207.0], [8.5, 207.0], [8.6, 207.0], [8.7, 207.0], [8.8, 207.0], [8.9, 207.0], [9.0, 207.0], [9.1, 207.0], [9.2, 207.0], [9.3, 207.0], [9.4, 207.0], [9.5, 207.0], [9.6, 207.0], [9.7, 208.0], [9.8, 208.0], [9.9, 208.0], [10.0, 208.0], [10.1, 208.0], [10.2, 208.0], [10.3, 208.0], [10.4, 208.0], [10.5, 208.0], [10.6, 208.0], [10.7, 208.0], [10.8, 208.0], [10.9, 208.0], [11.0, 208.0], [11.1, 208.0], [11.2, 209.0], [11.3, 209.0], [11.4, 209.0], [11.5, 209.0], [11.6, 209.0], [11.7, 209.0], [11.8, 209.0], [11.9, 209.0], [12.0, 209.0], [12.1, 209.0], [12.2, 209.0], [12.3, 209.0], [12.4, 209.0], [12.5, 209.0], [12.6, 209.0], [12.7, 209.0], [12.8, 209.0], [12.9, 209.0], [13.0, 209.0], [13.1, 210.0], [13.2, 210.0], [13.3, 210.0], [13.4, 210.0], [13.5, 210.0], [13.6, 210.0], [13.7, 210.0], [13.8, 210.0], [13.9, 210.0], [14.0, 210.0], [14.1, 210.0], [14.2, 210.0], [14.3, 210.0], [14.4, 210.0], [14.5, 210.0], [14.6, 210.0], [14.7, 210.0], [14.8, 211.0], [14.9, 211.0], [15.0, 211.0], [15.1, 211.0], [15.2, 211.0], [15.3, 211.0], [15.4, 211.0], [15.5, 211.0], [15.6, 211.0], [15.7, 211.0], [15.8, 211.0], [15.9, 211.0], [16.0, 211.0], [16.1, 211.0], [16.2, 211.0], [16.3, 211.0], [16.4, 211.0], [16.5, 211.0], [16.6, 211.0], [16.7, 211.0], [16.8, 212.0], [16.9, 212.0], [17.0, 212.0], [17.1, 212.0], [17.2, 212.0], [17.3, 212.0], [17.4, 212.0], [17.5, 212.0], [17.6, 212.0], [17.7, 212.0], [17.8, 212.0], [17.9, 212.0], [18.0, 212.0], [18.1, 212.0], [18.2, 212.0], [18.3, 212.0], [18.4, 213.0], [18.5, 213.0], [18.6, 213.0], [18.7, 213.0], [18.8, 213.0], [18.9, 213.0], [19.0, 213.0], [19.1, 213.0], [19.2, 213.0], [19.3, 213.0], [19.4, 213.0], [19.5, 213.0], [19.6, 213.0], [19.7, 213.0], [19.8, 213.0], [19.9, 213.0], [20.0, 214.0], [20.1, 214.0], [20.2, 214.0], [20.3, 214.0], [20.4, 214.0], [20.5, 214.0], [20.6, 214.0], [20.7, 214.0], [20.8, 214.0], [20.9, 214.0], [21.0, 214.0], [21.1, 214.0], [21.2, 214.0], [21.3, 214.0], [21.4, 214.0], [21.5, 215.0], [21.6, 215.0], [21.7, 215.0], [21.8, 215.0], [21.9, 215.0], [22.0, 215.0], [22.1, 215.0], [22.2, 215.0], [22.3, 215.0], [22.4, 215.0], [22.5, 215.0], [22.6, 215.0], [22.7, 215.0], [22.8, 215.0], [22.9, 215.0], [23.0, 215.0], [23.1, 215.0], [23.2, 216.0], [23.3, 216.0], [23.4, 216.0], [23.5, 216.0], [23.6, 216.0], [23.7, 216.0], [23.8, 216.0], [23.9, 216.0], [24.0, 216.0], [24.1, 216.0], [24.2, 216.0], [24.3, 216.0], [24.4, 216.0], [24.5, 216.0], [24.6, 216.0], [24.7, 216.0], [24.8, 217.0], [24.9, 217.0], [25.0, 217.0], [25.1, 217.0], [25.2, 217.0], [25.3, 217.0], [25.4, 217.0], [25.5, 217.0], [25.6, 217.0], [25.7, 217.0], [25.8, 217.0], [25.9, 217.0], [26.0, 217.0], [26.1, 218.0], [26.2, 218.0], [26.3, 218.0], [26.4, 218.0], [26.5, 218.0], [26.6, 218.0], [26.7, 218.0], [26.8, 218.0], [26.9, 218.0], [27.0, 218.0], [27.1, 218.0], [27.2, 218.0], [27.3, 218.0], [27.4, 219.0], [27.5, 219.0], [27.6, 219.0], [27.7, 219.0], [27.8, 219.0], [27.9, 219.0], [28.0, 219.0], [28.1, 219.0], [28.2, 219.0], [28.3, 219.0], [28.4, 219.0], [28.5, 219.0], [28.6, 219.0], [28.7, 220.0], [28.8, 220.0], [28.9, 220.0], [29.0, 220.0], [29.1, 220.0], [29.2, 220.0], [29.3, 220.0], [29.4, 220.0], [29.5, 220.0], [29.6, 220.0], [29.7, 220.0], [29.8, 220.0], [29.9, 220.0], [30.0, 220.0], [30.1, 221.0], [30.2, 221.0], [30.3, 221.0], [30.4, 221.0], [30.5, 221.0], [30.6, 221.0], [30.7, 221.0], [30.8, 221.0], [30.9, 221.0], [31.0, 221.0], [31.1, 221.0], [31.2, 221.0], [31.3, 221.0], [31.4, 222.0], [31.5, 222.0], [31.6, 222.0], [31.7, 222.0], [31.8, 222.0], [31.9, 222.0], [32.0, 222.0], [32.1, 222.0], [32.2, 222.0], [32.3, 222.0], [32.4, 222.0], [32.5, 222.0], [32.6, 222.0], [32.7, 222.0], [32.8, 222.0], [32.9, 222.0], [33.0, 223.0], [33.1, 223.0], [33.2, 223.0], [33.3, 223.0], [33.4, 223.0], [33.5, 223.0], [33.6, 223.0], [33.7, 223.0], [33.8, 223.0], [33.9, 223.0], [34.0, 223.0], [34.1, 223.0], [34.2, 223.0], [34.3, 223.0], [34.4, 223.0], [34.5, 223.0], [34.6, 223.0], [34.7, 223.0], [34.8, 223.0], [34.9, 224.0], [35.0, 224.0], [35.1, 224.0], [35.2, 224.0], [35.3, 224.0], [35.4, 224.0], [35.5, 224.0], [35.6, 224.0], [35.7, 224.0], [35.8, 224.0], [35.9, 224.0], [36.0, 224.0], [36.1, 224.0], [36.2, 224.0], [36.3, 224.0], [36.4, 224.0], [36.5, 224.0], [36.6, 225.0], [36.7, 225.0], [36.8, 225.0], [36.9, 225.0], [37.0, 225.0], [37.1, 225.0], [37.2, 225.0], [37.3, 225.0], [37.4, 225.0], [37.5, 225.0], [37.6, 225.0], [37.7, 225.0], [37.8, 225.0], [37.9, 225.0], [38.0, 225.0], [38.1, 225.0], [38.2, 225.0], [38.3, 225.0], [38.4, 225.0], [38.5, 226.0], [38.6, 226.0], [38.7, 226.0], [38.8, 226.0], [38.9, 226.0], [39.0, 226.0], [39.1, 226.0], [39.2, 226.0], [39.3, 226.0], [39.4, 226.0], [39.5, 226.0], [39.6, 226.0], [39.7, 226.0], [39.8, 226.0], [39.9, 226.0], [40.0, 226.0], [40.1, 226.0], [40.2, 226.0], [40.3, 226.0], [40.4, 226.0], [40.5, 226.0], [40.6, 226.0], [40.7, 227.0], [40.8, 227.0], [40.9, 227.0], [41.0, 227.0], [41.1, 227.0], [41.2, 227.0], [41.3, 227.0], [41.4, 227.0], [41.5, 227.0], [41.6, 227.0], [41.7, 227.0], [41.8, 227.0], [41.9, 227.0], [42.0, 227.0], [42.1, 227.0], [42.2, 227.0], [42.3, 227.0], [42.4, 227.0], [42.5, 228.0], [42.6, 228.0], [42.7, 228.0], [42.8, 228.0], [42.9, 228.0], [43.0, 228.0], [43.1, 228.0], [43.2, 228.0], [43.3, 228.0], [43.4, 228.0], [43.5, 228.0], [43.6, 228.0], [43.7, 228.0], [43.8, 228.0], [43.9, 228.0], [44.0, 228.0], [44.1, 228.0], [44.2, 228.0], [44.3, 228.0], [44.4, 228.0], [44.5, 228.0], [44.6, 228.0], [44.7, 228.0], [44.8, 228.0], [44.9, 229.0], [45.0, 229.0], [45.1, 229.0], [45.2, 229.0], [45.3, 229.0], [45.4, 229.0], [45.5, 229.0], [45.6, 229.0], [45.7, 229.0], [45.8, 229.0], [45.9, 229.0], [46.0, 229.0], [46.1, 229.0], [46.2, 229.0], [46.3, 229.0], [46.4, 229.0], [46.5, 229.0], [46.6, 229.0], [46.7, 229.0], [46.8, 229.0], [46.9, 229.0], [47.0, 229.0], [47.1, 229.0], [47.2, 230.0], [47.3, 230.0], [47.4, 230.0], [47.5, 230.0], [47.6, 230.0], [47.7, 230.0], [47.8, 230.0], [47.9, 230.0], [48.0, 230.0], [48.1, 230.0], [48.2, 230.0], [48.3, 230.0], [48.4, 230.0], [48.5, 230.0], [48.6, 230.0], [48.7, 230.0], [48.8, 230.0], [48.9, 230.0], [49.0, 230.0], [49.1, 230.0], [49.2, 230.0], [49.3, 231.0], [49.4, 231.0], [49.5, 231.0], [49.6, 231.0], [49.7, 231.0], [49.8, 231.0], [49.9, 231.0], [50.0, 231.0], [50.1, 231.0], [50.2, 231.0], [50.3, 231.0], [50.4, 231.0], [50.5, 231.0], [50.6, 231.0], [50.7, 231.0], [50.8, 231.0], [50.9, 231.0], [51.0, 231.0], [51.1, 231.0], [51.2, 232.0], [51.3, 232.0], [51.4, 232.0], [51.5, 232.0], [51.6, 232.0], [51.7, 232.0], [51.8, 232.0], [51.9, 232.0], [52.0, 232.0], [52.1, 232.0], [52.2, 232.0], [52.3, 232.0], [52.4, 232.0], [52.5, 232.0], [52.6, 232.0], [52.7, 232.0], [52.8, 232.0], [52.9, 232.0], [53.0, 232.0], [53.1, 232.0], [53.2, 232.0], [53.3, 233.0], [53.4, 233.0], [53.5, 233.0], [53.6, 233.0], [53.7, 233.0], [53.8, 233.0], [53.9, 233.0], [54.0, 233.0], [54.1, 233.0], [54.2, 233.0], [54.3, 233.0], [54.4, 233.0], [54.5, 233.0], [54.6, 233.0], [54.7, 233.0], [54.8, 233.0], [54.9, 233.0], [55.0, 233.0], [55.1, 234.0], [55.2, 234.0], [55.3, 234.0], [55.4, 234.0], [55.5, 234.0], [55.6, 234.0], [55.7, 234.0], [55.8, 234.0], [55.9, 234.0], [56.0, 234.0], [56.1, 234.0], [56.2, 234.0], [56.3, 234.0], [56.4, 235.0], [56.5, 235.0], [56.6, 235.0], [56.7, 235.0], [56.8, 235.0], [56.9, 235.0], [57.0, 235.0], [57.1, 235.0], [57.2, 235.0], [57.3, 235.0], [57.4, 235.0], [57.5, 235.0], [57.6, 235.0], [57.7, 235.0], [57.8, 235.0], [57.9, 235.0], [58.0, 236.0], [58.1, 236.0], [58.2, 236.0], [58.3, 236.0], [58.4, 236.0], [58.5, 236.0], [58.6, 236.0], [58.7, 236.0], [58.8, 236.0], [58.9, 236.0], [59.0, 236.0], [59.1, 236.0], [59.2, 237.0], [59.3, 237.0], [59.4, 237.0], [59.5, 237.0], [59.6, 237.0], [59.7, 237.0], [59.8, 237.0], [59.9, 237.0], [60.0, 237.0], [60.1, 237.0], [60.2, 237.0], [60.3, 237.0], [60.4, 237.0], [60.5, 238.0], [60.6, 238.0], [60.7, 238.0], [60.8, 238.0], [60.9, 238.0], [61.0, 238.0], [61.1, 238.0], [61.2, 238.0], [61.3, 238.0], [61.4, 238.0], [61.5, 238.0], [61.6, 238.0], [61.7, 238.0], [61.8, 239.0], [61.9, 239.0], [62.0, 239.0], [62.1, 239.0], [62.2, 239.0], [62.3, 239.0], [62.4, 239.0], [62.5, 239.0], [62.6, 239.0], [62.7, 239.0], [62.8, 239.0], [62.9, 239.0], [63.0, 239.0], [63.1, 239.0], [63.2, 240.0], [63.3, 240.0], [63.4, 240.0], [63.5, 240.0], [63.6, 240.0], [63.7, 240.0], [63.8, 240.0], [63.9, 240.0], [64.0, 240.0], [64.1, 240.0], [64.2, 240.0], [64.3, 240.0], [64.4, 240.0], [64.5, 240.0], [64.6, 240.0], [64.7, 240.0], [64.8, 241.0], [64.9, 241.0], [65.0, 241.0], [65.1, 241.0], [65.2, 241.0], [65.3, 241.0], [65.4, 241.0], [65.5, 241.0], [65.6, 241.0], [65.7, 241.0], [65.8, 241.0], [65.9, 241.0], [66.0, 241.0], [66.1, 241.0], [66.2, 241.0], [66.3, 241.0], [66.4, 241.0], [66.5, 242.0], [66.6, 242.0], [66.7, 242.0], [66.8, 242.0], [66.9, 242.0], [67.0, 242.0], [67.1, 242.0], [67.2, 242.0], [67.3, 242.0], [67.4, 242.0], [67.5, 242.0], [67.6, 242.0], [67.7, 242.0], [67.8, 242.0], [67.9, 243.0], [68.0, 243.0], [68.1, 243.0], [68.2, 243.0], [68.3, 243.0], [68.4, 243.0], [68.5, 243.0], [68.6, 243.0], [68.7, 243.0], [68.8, 243.0], [68.9, 243.0], [69.0, 243.0], [69.1, 243.0], [69.2, 244.0], [69.3, 244.0], [69.4, 244.0], [69.5, 244.0], [69.6, 244.0], [69.7, 244.0], [69.8, 244.0], [69.9, 244.0], [70.0, 244.0], [70.1, 244.0], [70.2, 244.0], [70.3, 244.0], [70.4, 245.0], [70.5, 245.0], [70.6, 245.0], [70.7, 245.0], [70.8, 245.0], [70.9, 245.0], [71.0, 245.0], [71.1, 245.0], [71.2, 245.0], [71.3, 245.0], [71.4, 245.0], [71.5, 245.0], [71.6, 245.0], [71.7, 245.0], [71.8, 246.0], [71.9, 246.0], [72.0, 246.0], [72.1, 246.0], [72.2, 246.0], [72.3, 246.0], [72.4, 246.0], [72.5, 246.0], [72.6, 246.0], [72.7, 246.0], [72.8, 246.0], [72.9, 246.0], [73.0, 247.0], [73.1, 247.0], [73.2, 247.0], [73.3, 247.0], [73.4, 247.0], [73.5, 247.0], [73.6, 247.0], [73.7, 247.0], [73.8, 248.0], [73.9, 248.0], [74.0, 248.0], [74.1, 248.0], [74.2, 248.0], [74.3, 248.0], [74.4, 248.0], [74.5, 248.0], [74.6, 248.0], [74.7, 248.0], [74.8, 249.0], [74.9, 249.0], [75.0, 249.0], [75.1, 249.0], [75.2, 249.0], [75.3, 249.0], [75.4, 249.0], [75.5, 249.0], [75.6, 250.0], [75.7, 250.0], [75.8, 250.0], [75.9, 250.0], [76.0, 250.0], [76.1, 250.0], [76.2, 250.0], [76.3, 250.0], [76.4, 250.0], [76.5, 250.0], [76.6, 250.0], [76.7, 250.0], [76.8, 250.0], [76.9, 250.0], [77.0, 251.0], [77.1, 251.0], [77.2, 251.0], [77.3, 251.0], [77.4, 251.0], [77.5, 251.0], [77.6, 251.0], [77.7, 251.0], [77.8, 251.0], [77.9, 251.0], [78.0, 251.0], [78.1, 252.0], [78.2, 252.0], [78.3, 252.0], [78.4, 252.0], [78.5, 252.0], [78.6, 252.0], [78.7, 252.0], [78.8, 252.0], [78.9, 252.0], [79.0, 252.0], [79.1, 252.0], [79.2, 252.0], [79.3, 253.0], [79.4, 253.0], [79.5, 253.0], [79.6, 253.0], [79.7, 253.0], [79.8, 253.0], [79.9, 253.0], [80.0, 253.0], [80.1, 253.0], [80.2, 253.0], [80.3, 254.0], [80.4, 254.0], [80.5, 254.0], [80.6, 254.0], [80.7, 254.0], [80.8, 254.0], [80.9, 254.0], [81.0, 254.0], [81.1, 254.0], [81.2, 255.0], [81.3, 255.0], [81.4, 255.0], [81.5, 255.0], [81.6, 255.0], [81.7, 255.0], [81.8, 255.0], [81.9, 255.0], [82.0, 256.0], [82.1, 256.0], [82.2, 256.0], [82.3, 256.0], [82.4, 256.0], [82.5, 256.0], [82.6, 256.0], [82.7, 256.0], [82.8, 256.0], [82.9, 257.0], [83.0, 257.0], [83.1, 257.0], [83.2, 257.0], [83.3, 257.0], [83.4, 258.0], [83.5, 258.0], [83.6, 258.0], [83.7, 258.0], [83.8, 258.0], [83.9, 258.0], [84.0, 259.0], [84.1, 259.0], [84.2, 259.0], [84.3, 259.0], [84.4, 260.0], [84.5, 260.0], [84.6, 260.0], [84.7, 260.0], [84.8, 261.0], [84.9, 261.0], [85.0, 262.0], [85.1, 262.0], [85.2, 262.0], [85.3, 262.0], [85.4, 262.0], [85.5, 262.0], [85.6, 263.0], [85.7, 263.0], [85.8, 264.0], [85.9, 264.0], [86.0, 264.0], [86.1, 264.0], [86.2, 264.0], [86.3, 264.0], [86.4, 265.0], [86.5, 265.0], [86.6, 265.0], [86.7, 265.0], [86.8, 265.0], [86.9, 265.0], [87.0, 265.0], [87.1, 265.0], [87.2, 265.0], [87.3, 266.0], [87.4, 266.0], [87.5, 266.0], [87.6, 266.0], [87.7, 267.0], [87.8, 267.0], [87.9, 267.0], [88.0, 267.0], [88.1, 267.0], [88.2, 268.0], [88.3, 268.0], [88.4, 269.0], [88.5, 269.0], [88.6, 269.0], [88.7, 269.0], [88.8, 270.0], [88.9, 270.0], [89.0, 270.0], [89.1, 271.0], [89.2, 272.0], [89.3, 272.0], [89.4, 272.0], [89.5, 272.0], [89.6, 272.0], [89.7, 273.0], [89.8, 273.0], [89.9, 273.0], [90.0, 274.0], [90.1, 274.0], [90.2, 275.0], [90.3, 276.0], [90.4, 276.0], [90.5, 278.0], [90.6, 278.0], [90.7, 278.0], [90.8, 279.0], [90.9, 279.0], [91.0, 280.0], [91.1, 280.0], [91.2, 280.0], [91.3, 280.0], [91.4, 281.0], [91.5, 281.0], [91.6, 281.0], [91.7, 282.0], [91.8, 284.0], [91.9, 284.0], [92.0, 285.0], [92.1, 286.0], [92.2, 287.0], [92.3, 287.0], [92.4, 289.0], [92.5, 290.0], [92.6, 290.0], [92.7, 290.0], [92.8, 291.0], [92.9, 292.0], [93.0, 292.0], [93.1, 293.0], [93.2, 295.0], [93.3, 297.0], [93.4, 297.0], [93.5, 298.0], [93.6, 298.0], [93.7, 299.0], [93.8, 300.0], [93.9, 303.0], [94.0, 303.0], [94.1, 306.0], [94.2, 307.0], [94.3, 309.0], [94.4, 311.0], [94.5, 312.0], [94.6, 313.0], [94.7, 316.0], [94.8, 317.0], [94.9, 318.0], [95.0, 322.0], [95.1, 324.0], [95.2, 324.0], [95.3, 325.0], [95.4, 327.0], [95.5, 329.0], [95.6, 331.0], [95.7, 332.0], [95.8, 334.0], [95.9, 337.0], [96.0, 342.0], [96.1, 346.0], [96.2, 352.0], [96.3, 354.0], [96.4, 358.0], [96.5, 362.0], [96.6, 369.0], [96.7, 375.0], [96.8, 379.0], [96.9, 380.0], [97.0, 388.0], [97.1, 405.0], [97.2, 419.0], [97.3, 430.0], [97.4, 435.0], [97.5, 451.0], [97.6, 460.0], [97.7, 477.0], [97.8, 496.0], [97.9, 509.0], [98.0, 515.0], [98.1, 524.0], [98.2, 529.0], [98.3, 559.0], [98.4, 566.0], [98.5, 592.0], [98.6, 595.0], [98.7, 600.0], [98.8, 606.0], [98.9, 615.0], [99.0, 624.0], [99.1, 659.0], [99.2, 671.0], [99.3, 853.0], [99.4, 912.0], [99.5, 969.0], [99.6, 1075.0], [99.7, 1260.0], [99.8, 1448.0], [99.9, 1862.0], [100.0, 6482.0]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[0.0, 513.0], [0.1, 513.0], [0.2, 513.0], [0.3, 514.0], [0.4, 514.0], [0.5, 515.0], [0.6, 515.0], [0.7, 515.0], [0.8, 516.0], [0.9, 516.0], [1.0, 516.0], [1.1, 517.0], [1.2, 517.0], [1.3, 517.0], [1.4, 517.0], [1.5, 517.0], [1.6, 517.0], [1.7, 518.0], [1.8, 518.0], [1.9, 518.0], [2.0, 518.0], [2.1, 518.0], [2.2, 518.0], [2.3, 518.0], [2.4, 519.0], [2.5, 519.0], [2.6, 519.0], [2.7, 519.0], [2.8, 519.0], [2.9, 519.0], [3.0, 519.0], [3.1, 519.0], [3.2, 520.0], [3.3, 520.0], [3.4, 520.0], [3.5, 520.0], [3.6, 520.0], [3.7, 520.0], [3.8, 520.0], [3.9, 521.0], [4.0, 521.0], [4.1, 521.0], [4.2, 521.0], [4.3, 521.0], [4.4, 521.0], [4.5, 521.0], [4.6, 521.0], [4.7, 521.0], [4.8, 521.0], [4.9, 521.0], [5.0, 522.0], [5.1, 522.0], [5.2, 522.0], [5.3, 522.0], [5.4, 522.0], [5.5, 522.0], [5.6, 523.0], [5.7, 523.0], [5.8, 523.0], [5.9, 523.0], [6.0, 523.0], [6.1, 523.0], [6.2, 523.0], [6.3, 523.0], [6.4, 523.0], [6.5, 523.0], [6.6, 523.0], [6.7, 523.0], [6.8, 523.0], [6.9, 523.0], [7.0, 523.0], [7.1, 523.0], [7.2, 523.0], [7.3, 524.0], [7.4, 524.0], [7.5, 524.0], [7.6, 524.0], [7.7, 524.0], [7.8, 524.0], [7.9, 524.0], [8.0, 524.0], [8.1, 524.0], [8.2, 525.0], [8.3, 525.0], [8.4, 525.0], [8.5, 525.0], [8.6, 525.0], [8.7, 525.0], [8.8, 525.0], [8.9, 525.0], [9.0, 525.0], [9.1, 525.0], [9.2, 525.0], [9.3, 525.0], [9.4, 525.0], [9.5, 525.0], [9.6, 525.0], [9.7, 526.0], [9.8, 526.0], [9.9, 526.0], [10.0, 526.0], [10.1, 526.0], [10.2, 526.0], [10.3, 526.0], [10.4, 526.0], [10.5, 526.0], [10.6, 526.0], [10.7, 526.0], [10.8, 526.0], [10.9, 527.0], [11.0, 527.0], [11.1, 527.0], [11.2, 527.0], [11.3, 527.0], [11.4, 527.0], [11.5, 527.0], [11.6, 527.0], [11.7, 527.0], [11.8, 527.0], [11.9, 527.0], [12.0, 527.0], [12.1, 527.0], [12.2, 527.0], [12.3, 528.0], [12.4, 528.0], [12.5, 528.0], [12.6, 528.0], [12.7, 528.0], [12.8, 528.0], [12.9, 528.0], [13.0, 528.0], [13.1, 528.0], [13.2, 528.0], [13.3, 528.0], [13.4, 528.0], [13.5, 528.0], [13.6, 528.0], [13.7, 529.0], [13.8, 529.0], [13.9, 529.0], [14.0, 529.0], [14.1, 529.0], [14.2, 529.0], [14.3, 529.0], [14.4, 529.0], [14.5, 529.0], [14.6, 529.0], [14.7, 529.0], [14.8, 529.0], [14.9, 529.0], [15.0, 529.0], [15.1, 529.0], [15.2, 530.0], [15.3, 530.0], [15.4, 530.0], [15.5, 530.0], [15.6, 530.0], [15.7, 530.0], [15.8, 530.0], [15.9, 530.0], [16.0, 530.0], [16.1, 530.0], [16.2, 530.0], [16.3, 531.0], [16.4, 531.0], [16.5, 531.0], [16.6, 531.0], [16.7, 531.0], [16.8, 531.0], [16.9, 531.0], [17.0, 531.0], [17.1, 531.0], [17.2, 531.0], [17.3, 531.0], [17.4, 531.0], [17.5, 531.0], [17.6, 531.0], [17.7, 532.0], [17.8, 532.0], [17.9, 532.0], [18.0, 532.0], [18.1, 532.0], [18.2, 532.0], [18.3, 532.0], [18.4, 532.0], [18.5, 532.0], [18.6, 532.0], [18.7, 532.0], [18.8, 532.0], [18.9, 533.0], [19.0, 533.0], [19.1, 533.0], [19.2, 533.0], [19.3, 533.0], [19.4, 533.0], [19.5, 533.0], [19.6, 534.0], [19.7, 534.0], [19.8, 534.0], [19.9, 534.0], [20.0, 534.0], [20.1, 534.0], [20.2, 534.0], [20.3, 534.0], [20.4, 535.0], [20.5, 535.0], [20.6, 535.0], [20.7, 535.0], [20.8, 535.0], [20.9, 535.0], [21.0, 535.0], [21.1, 535.0], [21.2, 535.0], [21.3, 535.0], [21.4, 536.0], [21.5, 536.0], [21.6, 536.0], [21.7, 536.0], [21.8, 536.0], [21.9, 536.0], [22.0, 536.0], [22.1, 536.0], [22.2, 536.0], [22.3, 536.0], [22.4, 536.0], [22.5, 536.0], [22.6, 536.0], [22.7, 536.0], [22.8, 537.0], [22.9, 537.0], [23.0, 537.0], [23.1, 537.0], [23.2, 537.0], [23.3, 537.0], [23.4, 537.0], [23.5, 537.0], [23.6, 538.0], [23.7, 538.0], [23.8, 538.0], [23.9, 538.0], [24.0, 538.0], [24.1, 538.0], [24.2, 538.0], [24.3, 538.0], [24.4, 539.0], [24.5, 539.0], [24.6, 539.0], [24.7, 539.0], [24.8, 539.0], [24.9, 539.0], [25.0, 539.0], [25.1, 539.0], [25.2, 540.0], [25.3, 540.0], [25.4, 540.0], [25.5, 540.0], [25.6, 540.0], [25.7, 540.0], [25.8, 541.0], [25.9, 541.0], [26.0, 541.0], [26.1, 541.0], [26.2, 541.0], [26.3, 541.0], [26.4, 541.0], [26.5, 542.0], [26.6, 542.0], [26.7, 542.0], [26.8, 542.0], [26.9, 542.0], [27.0, 542.0], [27.1, 542.0], [27.2, 542.0], [27.3, 542.0], [27.4, 542.0], [27.5, 542.0], [27.6, 543.0], [27.7, 543.0], [27.8, 543.0], [27.9, 543.0], [28.0, 543.0], [28.1, 543.0], [28.2, 543.0], [28.3, 543.0], [28.4, 543.0], [28.5, 543.0], [28.6, 544.0], [28.7, 544.0], [28.8, 544.0], [28.9, 544.0], [29.0, 544.0], [29.1, 544.0], [29.2, 544.0], [29.3, 545.0], [29.4, 545.0], [29.5, 545.0], [29.6, 545.0], [29.7, 545.0], [29.8, 545.0], [29.9, 545.0], [30.0, 545.0], [30.1, 545.0], [30.2, 545.0], [30.3, 545.0], [30.4, 546.0], [30.5, 546.0], [30.6, 546.0], [30.7, 546.0], [30.8, 546.0], [30.9, 546.0], [31.0, 546.0], [31.1, 546.0], [31.2, 546.0], [31.3, 547.0], [31.4, 547.0], [31.5, 547.0], [31.6, 547.0], [31.7, 547.0], [31.8, 547.0], [31.9, 547.0], [32.0, 547.0], [32.1, 547.0], [32.2, 547.0], [32.3, 547.0], [32.4, 547.0], [32.5, 547.0], [32.6, 548.0], [32.7, 548.0], [32.8, 548.0], [32.9, 548.0], [33.0, 548.0], [33.1, 548.0], [33.2, 548.0], [33.3, 548.0], [33.4, 549.0], [33.5, 549.0], [33.6, 549.0], [33.7, 549.0], [33.8, 549.0], [33.9, 549.0], [34.0, 549.0], [34.1, 549.0], [34.2, 549.0], [34.3, 549.0], [34.4, 549.0], [34.5, 549.0], [34.6, 549.0], [34.7, 550.0], [34.8, 550.0], [34.9, 550.0], [35.0, 550.0], [35.1, 550.0], [35.2, 550.0], [35.3, 550.0], [35.4, 550.0], [35.5, 551.0], [35.6, 551.0], [35.7, 551.0], [35.8, 551.0], [35.9, 551.0], [36.0, 551.0], [36.1, 551.0], [36.2, 551.0], [36.3, 551.0], [36.4, 552.0], [36.5, 552.0], [36.6, 552.0], [36.7, 552.0], [36.8, 552.0], [36.9, 552.0], [37.0, 552.0], [37.1, 553.0], [37.2, 553.0], [37.3, 553.0], [37.4, 553.0], [37.5, 553.0], [37.6, 553.0], [37.7, 553.0], [37.8, 553.0], [37.9, 553.0], [38.0, 554.0], [38.1, 554.0], [38.2, 554.0], [38.3, 554.0], [38.4, 554.0], [38.5, 554.0], [38.6, 554.0], [38.7, 554.0], [38.8, 554.0], [38.9, 554.0], [39.0, 554.0], [39.1, 554.0], [39.2, 554.0], [39.3, 555.0], [39.4, 555.0], [39.5, 555.0], [39.6, 555.0], [39.7, 555.0], [39.8, 555.0], [39.9, 555.0], [40.0, 555.0], [40.1, 555.0], [40.2, 556.0], [40.3, 556.0], [40.4, 556.0], [40.5, 556.0], [40.6, 557.0], [40.7, 557.0], [40.8, 557.0], [40.9, 557.0], [41.0, 557.0], [41.1, 557.0], [41.2, 557.0], [41.3, 557.0], [41.4, 558.0], [41.5, 558.0], [41.6, 558.0], [41.7, 558.0], [41.8, 558.0], [41.9, 558.0], [42.0, 558.0], [42.1, 559.0], [42.2, 559.0], [42.3, 559.0], [42.4, 559.0], [42.5, 559.0], [42.6, 559.0], [42.7, 559.0], [42.8, 559.0], [42.9, 560.0], [43.0, 560.0], [43.1, 560.0], [43.2, 560.0], [43.3, 560.0], [43.4, 561.0], [43.5, 561.0], [43.6, 561.0], [43.7, 561.0], [43.8, 561.0], [43.9, 561.0], [44.0, 562.0], [44.1, 562.0], [44.2, 562.0], [44.3, 562.0], [44.4, 562.0], [44.5, 563.0], [44.6, 563.0], [44.7, 563.0], [44.8, 563.0], [44.9, 563.0], [45.0, 564.0], [45.1, 564.0], [45.2, 564.0], [45.3, 564.0], [45.4, 564.0], [45.5, 564.0], [45.6, 564.0], [45.7, 564.0], [45.8, 565.0], [45.9, 565.0], [46.0, 565.0], [46.1, 565.0], [46.2, 565.0], [46.3, 565.0], [46.4, 565.0], [46.5, 565.0], [46.6, 565.0], [46.7, 566.0], [46.8, 566.0], [46.9, 566.0], [47.0, 566.0], [47.1, 566.0], [47.2, 566.0], [47.3, 567.0], [47.4, 567.0], [47.5, 567.0], [47.6, 567.0], [47.7, 568.0], [47.8, 568.0], [47.9, 568.0], [48.0, 568.0], [48.1, 568.0], [48.2, 568.0], [48.3, 568.0], [48.4, 569.0], [48.5, 569.0], [48.6, 569.0], [48.7, 569.0], [48.8, 569.0], [48.9, 569.0], [49.0, 569.0], [49.1, 569.0], [49.2, 570.0], [49.3, 570.0], [49.4, 570.0], [49.5, 570.0], [49.6, 571.0], [49.7, 571.0], [49.8, 571.0], [49.9, 571.0], [50.0, 571.0], [50.1, 571.0], [50.2, 571.0], [50.3, 572.0], [50.4, 572.0], [50.5, 572.0], [50.6, 572.0], [50.7, 573.0], [50.8, 573.0], [50.9, 573.0], [51.0, 573.0], [51.1, 574.0], [51.2, 574.0], [51.3, 574.0], [51.4, 574.0], [51.5, 574.0], [51.6, 574.0], [51.7, 575.0], [51.8, 575.0], [51.9, 576.0], [52.0, 576.0], [52.1, 576.0], [52.2, 576.0], [52.3, 576.0], [52.4, 577.0], [52.5, 577.0], [52.6, 577.0], [52.7, 578.0], [52.8, 578.0], [52.9, 578.0], [53.0, 578.0], [53.1, 579.0], [53.2, 579.0], [53.3, 579.0], [53.4, 580.0], [53.5, 580.0], [53.6, 580.0], [53.7, 581.0], [53.8, 582.0], [53.9, 582.0], [54.0, 582.0], [54.1, 582.0], [54.2, 583.0], [54.3, 583.0], [54.4, 584.0], [54.5, 584.0], [54.6, 584.0], [54.7, 584.0], [54.8, 584.0], [54.9, 584.0], [55.0, 584.0], [55.1, 585.0], [55.2, 585.0], [55.3, 585.0], [55.4, 586.0], [55.5, 586.0], [55.6, 586.0], [55.7, 586.0], [55.8, 587.0], [55.9, 587.0], [56.0, 588.0], [56.1, 588.0], [56.2, 588.0], [56.3, 588.0], [56.4, 588.0], [56.5, 589.0], [56.6, 589.0], [56.7, 589.0], [56.8, 589.0], [56.9, 589.0], [57.0, 590.0], [57.1, 590.0], [57.2, 590.0], [57.3, 590.0], [57.4, 590.0], [57.5, 591.0], [57.6, 591.0], [57.7, 591.0], [57.8, 591.0], [57.9, 592.0], [58.0, 592.0], [58.1, 592.0], [58.2, 593.0], [58.3, 593.0], [58.4, 594.0], [58.5, 594.0], [58.6, 594.0], [58.7, 595.0], [58.8, 595.0], [58.9, 595.0], [59.0, 595.0], [59.1, 596.0], [59.2, 596.0], [59.3, 597.0], [59.4, 597.0], [59.5, 597.0], [59.6, 598.0], [59.7, 598.0], [59.8, 598.0], [59.9, 599.0], [60.0, 599.0], [60.1, 599.0], [60.2, 600.0], [60.3, 600.0], [60.4, 601.0], [60.5, 601.0], [60.6, 602.0], [60.7, 602.0], [60.8, 602.0], [60.9, 603.0], [61.0, 603.0], [61.1, 603.0], [61.2, 604.0], [61.3, 605.0], [61.4, 605.0], [61.5, 605.0], [61.6, 605.0], [61.7, 606.0], [61.8, 606.0], [61.9, 606.0], [62.0, 606.0], [62.1, 606.0], [62.2, 607.0], [62.3, 607.0], [62.4, 608.0], [62.5, 609.0], [62.6, 609.0], [62.7, 609.0], [62.8, 610.0], [62.9, 610.0], [63.0, 611.0], [63.1, 611.0], [63.2, 611.0], [63.3, 611.0], [63.4, 612.0], [63.5, 612.0], [63.6, 613.0], [63.7, 613.0], [63.8, 613.0], [63.9, 614.0], [64.0, 614.0], [64.1, 614.0], [64.2, 614.0], [64.3, 615.0], [64.4, 615.0], [64.5, 615.0], [64.6, 616.0], [64.7, 616.0], [64.8, 617.0], [64.9, 618.0], [65.0, 618.0], [65.1, 619.0], [65.2, 620.0], [65.3, 621.0], [65.4, 621.0], [65.5, 622.0], [65.6, 622.0], [65.7, 623.0], [65.8, 623.0], [65.9, 623.0], [66.0, 624.0], [66.1, 624.0], [66.2, 624.0], [66.3, 624.0], [66.4, 624.0], [66.5, 625.0], [66.6, 626.0], [66.7, 626.0], [66.8, 626.0], [66.9, 626.0], [67.0, 626.0], [67.1, 628.0], [67.2, 628.0], [67.3, 628.0], [67.4, 629.0], [67.5, 629.0], [67.6, 630.0], [67.7, 630.0], [67.8, 630.0], [67.9, 631.0], [68.0, 632.0], [68.1, 633.0], [68.2, 634.0], [68.3, 637.0], [68.4, 638.0], [68.5, 639.0], [68.6, 639.0], [68.7, 640.0], [68.8, 640.0], [68.9, 640.0], [69.0, 641.0], [69.1, 641.0], [69.2, 642.0], [69.3, 642.0], [69.4, 642.0], [69.5, 643.0], [69.6, 644.0], [69.7, 644.0], [69.8, 644.0], [69.9, 645.0], [70.0, 645.0], [70.1, 645.0], [70.2, 646.0], [70.3, 646.0], [70.4, 646.0], [70.5, 646.0], [70.6, 647.0], [70.7, 647.0], [70.8, 648.0], [70.9, 648.0], [71.0, 648.0], [71.1, 649.0], [71.2, 649.0], [71.3, 650.0], [71.4, 651.0], [71.5, 651.0], [71.6, 652.0], [71.7, 652.0], [71.8, 652.0], [71.9, 653.0], [72.0, 654.0], [72.1, 654.0], [72.2, 655.0], [72.3, 656.0], [72.4, 656.0], [72.5, 657.0], [72.6, 657.0], [72.7, 658.0], [72.8, 659.0], [72.9, 659.0], [73.0, 659.0], [73.1, 660.0], [73.2, 661.0], [73.3, 661.0], [73.4, 662.0], [73.5, 662.0], [73.6, 663.0], [73.7, 663.0], [73.8, 663.0], [73.9, 664.0], [74.0, 665.0], [74.1, 666.0], [74.2, 666.0], [74.3, 666.0], [74.4, 666.0], [74.5, 668.0], [74.6, 669.0], [74.7, 669.0], [74.8, 670.0], [74.9, 670.0], [75.0, 670.0], [75.1, 673.0], [75.2, 673.0], [75.3, 674.0], [75.4, 676.0], [75.5, 677.0], [75.6, 677.0], [75.7, 678.0], [75.8, 678.0], [75.9, 679.0], [76.0, 680.0], [76.1, 680.0], [76.2, 682.0], [76.3, 683.0], [76.4, 683.0], [76.5, 686.0], [76.6, 686.0], [76.7, 687.0], [76.8, 687.0], [76.9, 687.0], [77.0, 688.0], [77.1, 688.0], [77.2, 688.0], [77.3, 689.0], [77.4, 689.0], [77.5, 690.0], [77.6, 690.0], [77.7, 691.0], [77.8, 692.0], [77.9, 693.0], [78.0, 693.0], [78.1, 694.0], [78.2, 695.0], [78.3, 695.0], [78.4, 696.0], [78.5, 696.0], [78.6, 696.0], [78.7, 698.0], [78.8, 698.0], [78.9, 700.0], [79.0, 702.0], [79.1, 702.0], [79.2, 703.0], [79.3, 703.0], [79.4, 704.0], [79.5, 704.0], [79.6, 704.0], [79.7, 705.0], [79.8, 706.0], [79.9, 707.0], [80.0, 707.0], [80.1, 708.0], [80.2, 708.0], [80.3, 709.0], [80.4, 709.0], [80.5, 710.0], [80.6, 712.0], [80.7, 713.0], [80.8, 717.0], [80.9, 717.0], [81.0, 718.0], [81.1, 721.0], [81.2, 722.0], [81.3, 723.0], [81.4, 724.0], [81.5, 727.0], [81.6, 728.0], [81.7, 728.0], [81.8, 729.0], [81.9, 730.0], [82.0, 730.0], [82.1, 731.0], [82.2, 733.0], [82.3, 735.0], [82.4, 735.0], [82.5, 737.0], [82.6, 739.0], [82.7, 739.0], [82.8, 740.0], [82.9, 741.0], [83.0, 742.0], [83.1, 743.0], [83.2, 743.0], [83.3, 744.0], [83.4, 745.0], [83.5, 745.0], [83.6, 745.0], [83.7, 746.0], [83.8, 746.0], [83.9, 746.0], [84.0, 747.0], [84.1, 749.0], [84.2, 749.0], [84.3, 750.0], [84.4, 750.0], [84.5, 754.0], [84.6, 754.0], [84.7, 755.0], [84.8, 756.0], [84.9, 756.0], [85.0, 760.0], [85.1, 763.0], [85.2, 764.0], [85.3, 764.0], [85.4, 766.0], [85.5, 770.0], [85.6, 772.0], [85.7, 774.0], [85.8, 775.0], [85.9, 779.0], [86.0, 781.0], [86.1, 784.0], [86.2, 786.0], [86.3, 787.0], [86.4, 788.0], [86.5, 790.0], [86.6, 793.0], [86.7, 797.0], [86.8, 798.0], [86.9, 801.0], [87.0, 802.0], [87.1, 805.0], [87.2, 805.0], [87.3, 807.0], [87.4, 808.0], [87.5, 808.0], [87.6, 811.0], [87.7, 813.0], [87.8, 817.0], [87.9, 822.0], [88.0, 823.0], [88.1, 825.0], [88.2, 827.0], [88.3, 829.0], [88.4, 829.0], [88.5, 832.0], [88.6, 834.0], [88.7, 838.0], [88.8, 839.0], [88.9, 841.0], [89.0, 842.0], [89.1, 843.0], [89.2, 845.0], [89.3, 845.0], [89.4, 848.0], [89.5, 850.0], [89.6, 851.0], [89.7, 853.0], [89.8, 857.0], [89.9, 860.0], [90.0, 864.0], [90.1, 876.0], [90.2, 878.0], [90.3, 884.0], [90.4, 887.0], [90.5, 888.0], [90.6, 890.0], [90.7, 892.0], [90.8, 899.0], [90.9, 900.0], [91.0, 900.0], [91.1, 905.0], [91.2, 906.0], [91.3, 907.0], [91.4, 911.0], [91.5, 913.0], [91.6, 914.0], [91.7, 917.0], [91.8, 919.0], [91.9, 922.0], [92.0, 923.0], [92.1, 926.0], [92.2, 929.0], [92.3, 933.0], [92.4, 935.0], [92.5, 938.0], [92.6, 939.0], [92.7, 942.0], [92.8, 943.0], [92.9, 945.0], [93.0, 946.0], [93.1, 947.0], [93.2, 949.0], [93.3, 950.0], [93.4, 953.0], [93.5, 956.0], [93.6, 966.0], [93.7, 968.0], [93.8, 968.0], [93.9, 969.0], [94.0, 976.0], [94.1, 987.0], [94.2, 988.0], [94.3, 988.0], [94.4, 991.0], [94.5, 994.0], [94.6, 998.0], [94.7, 1008.0], [94.8, 1010.0], [94.9, 1013.0], [95.0, 1015.0], [95.1, 1024.0], [95.2, 1027.0], [95.3, 1031.0], [95.4, 1033.0], [95.5, 1038.0], [95.6, 1042.0], [95.7, 1046.0], [95.8, 1050.0], [95.9, 1051.0], [96.0, 1057.0], [96.1, 1060.0], [96.2, 1063.0], [96.3, 1071.0], [96.4, 1082.0], [96.5, 1086.0], [96.6, 1090.0], [96.7, 1094.0], [96.8, 1096.0], [96.9, 1098.0], [97.0, 1100.0], [97.1, 1110.0], [97.2, 1119.0], [97.3, 1122.0], [97.4, 1134.0], [97.5, 1135.0], [97.6, 1145.0], [97.7, 1147.0], [97.8, 1158.0], [97.9, 1174.0], [98.0, 1184.0], [98.1, 1196.0], [98.2, 1221.0], [98.3, 1226.0], [98.4, 1232.0], [98.5, 1243.0], [98.6, 1250.0], [98.7, 1277.0], [98.8, 1278.0], [98.9, 1293.0], [99.0, 1309.0], [99.1, 1343.0], [99.2, 1373.0], [99.3, 1390.0], [99.4, 1415.0], [99.5, 1422.0], [99.6, 1461.0], [99.7, 1466.0], [99.8, 1536.0], [99.9, 2025.0], [100.0, 8079.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[0.0, 138.0], [0.1, 140.0], [0.2, 140.0], [0.3, 141.0], [0.4, 141.0], [0.5, 141.0], [0.6, 141.0], [0.7, 141.0], [0.8, 141.0], [0.9, 141.0], [1.0, 142.0], [1.1, 142.0], [1.2, 142.0], [1.3, 142.0], [1.4, 142.0], [1.5, 142.0], [1.6, 142.0], [1.7, 142.0], [1.8, 142.0], [1.9, 142.0], [2.0, 142.0], [2.1, 142.0], [2.2, 143.0], [2.3, 143.0], [2.4, 143.0], [2.5, 143.0], [2.6, 143.0], [2.7, 143.0], [2.8, 143.0], [2.9, 143.0], [3.0, 143.0], [3.1, 143.0], [3.2, 143.0], [3.3, 143.0], [3.4, 143.0], [3.5, 143.0], [3.6, 144.0], [3.7, 144.0], [3.8, 144.0], [3.9, 144.0], [4.0, 144.0], [4.1, 144.0], [4.2, 144.0], [4.3, 144.0], [4.4, 144.0], [4.5, 144.0], [4.6, 144.0], [4.7, 144.0], [4.8, 144.0], [4.9, 144.0], [5.0, 144.0], [5.1, 144.0], [5.2, 144.0], [5.3, 144.0], [5.4, 144.0], [5.5, 144.0], [5.6, 144.0], [5.7, 145.0], [5.8, 145.0], [5.9, 145.0], [6.0, 145.0], [6.1, 145.0], [6.2, 145.0], [6.3, 145.0], [6.4, 145.0], [6.5, 145.0], [6.6, 145.0], [6.7, 145.0], [6.8, 145.0], [6.9, 145.0], [7.0, 145.0], [7.1, 145.0], [7.2, 145.0], [7.3, 145.0], [7.4, 145.0], [7.5, 145.0], [7.6, 145.0], [7.7, 145.0], [7.8, 145.0], [7.9, 145.0], [8.0, 145.0], [8.1, 145.0], [8.2, 145.0], [8.3, 145.0], [8.4, 146.0], [8.5, 146.0], [8.6, 146.0], [8.7, 146.0], [8.8, 146.0], [8.9, 146.0], [9.0, 146.0], [9.1, 146.0], [9.2, 146.0], [9.3, 146.0], [9.4, 146.0], [9.5, 146.0], [9.6, 146.0], [9.7, 146.0], [9.8, 146.0], [9.9, 146.0], [10.0, 146.0], [10.1, 146.0], [10.2, 146.0], [10.3, 146.0], [10.4, 146.0], [10.5, 146.0], [10.6, 146.0], [10.7, 146.0], [10.8, 146.0], [10.9, 146.0], [11.0, 146.0], [11.1, 146.0], [11.2, 146.0], [11.3, 146.0], [11.4, 146.0], [11.5, 147.0], [11.6, 147.0], [11.7, 147.0], [11.8, 147.0], [11.9, 147.0], [12.0, 147.0], [12.1, 147.0], [12.2, 147.0], [12.3, 147.0], [12.4, 147.0], [12.5, 147.0], [12.6, 147.0], [12.7, 147.0], [12.8, 147.0], [12.9, 147.0], [13.0, 147.0], [13.1, 147.0], [13.2, 147.0], [13.3, 147.0], [13.4, 147.0], [13.5, 147.0], [13.6, 147.0], [13.7, 147.0], [13.8, 147.0], [13.9, 147.0], [14.0, 147.0], [14.1, 147.0], [14.2, 147.0], [14.3, 147.0], [14.4, 147.0], [14.5, 147.0], [14.6, 147.0], [14.7, 147.0], [14.8, 148.0], [14.9, 148.0], [15.0, 148.0], [15.1, 148.0], [15.2, 148.0], [15.3, 148.0], [15.4, 148.0], [15.5, 148.0], [15.6, 148.0], [15.7, 148.0], [15.8, 148.0], [15.9, 148.0], [16.0, 148.0], [16.1, 148.0], [16.2, 148.0], [16.3, 148.0], [16.4, 148.0], [16.5, 148.0], [16.6, 148.0], [16.7, 148.0], [16.8, 148.0], [16.9, 148.0], [17.0, 148.0], [17.1, 148.0], [17.2, 148.0], [17.3, 148.0], [17.4, 148.0], [17.5, 148.0], [17.6, 148.0], [17.7, 148.0], [17.8, 148.0], [17.9, 148.0], [18.0, 148.0], [18.1, 148.0], [18.2, 148.0], [18.3, 148.0], [18.4, 148.0], [18.5, 149.0], [18.6, 149.0], [18.7, 149.0], [18.8, 149.0], [18.9, 149.0], [19.0, 149.0], [19.1, 149.0], [19.2, 149.0], [19.3, 149.0], [19.4, 149.0], [19.5, 149.0], [19.6, 149.0], [19.7, 149.0], [19.8, 149.0], [19.9, 149.0], [20.0, 149.0], [20.1, 149.0], [20.2, 149.0], [20.3, 149.0], [20.4, 149.0], [20.5, 149.0], [20.6, 149.0], [20.7, 149.0], [20.8, 149.0], [20.9, 149.0], [21.0, 149.0], [21.1, 149.0], [21.2, 149.0], [21.3, 149.0], [21.4, 149.0], [21.5, 149.0], [21.6, 150.0], [21.7, 150.0], [21.8, 150.0], [21.9, 150.0], [22.0, 150.0], [22.1, 150.0], [22.2, 150.0], [22.3, 150.0], [22.4, 150.0], [22.5, 150.0], [22.6, 150.0], [22.7, 150.0], [22.8, 150.0], [22.9, 150.0], [23.0, 150.0], [23.1, 150.0], [23.2, 150.0], [23.3, 150.0], [23.4, 150.0], [23.5, 150.0], [23.6, 150.0], [23.7, 150.0], [23.8, 150.0], [23.9, 150.0], [24.0, 151.0], [24.1, 151.0], [24.2, 151.0], [24.3, 151.0], [24.4, 151.0], [24.5, 151.0], [24.6, 151.0], [24.7, 151.0], [24.8, 151.0], [24.9, 151.0], [25.0, 151.0], [25.1, 151.0], [25.2, 151.0], [25.3, 151.0], [25.4, 151.0], [25.5, 151.0], [25.6, 151.0], [25.7, 151.0], [25.8, 151.0], [25.9, 151.0], [26.0, 151.0], [26.1, 151.0], [26.2, 151.0], [26.3, 151.0], [26.4, 151.0], [26.5, 151.0], [26.6, 151.0], [26.7, 151.0], [26.8, 151.0], [26.9, 151.0], [27.0, 151.0], [27.1, 151.0], [27.2, 151.0], [27.3, 151.0], [27.4, 151.0], [27.5, 151.0], [27.6, 151.0], [27.7, 152.0], [27.8, 152.0], [27.9, 152.0], [28.0, 152.0], [28.1, 152.0], [28.2, 152.0], [28.3, 152.0], [28.4, 152.0], [28.5, 152.0], [28.6, 152.0], [28.7, 152.0], [28.8, 152.0], [28.9, 152.0], [29.0, 152.0], [29.1, 152.0], [29.2, 152.0], [29.3, 152.0], [29.4, 152.0], [29.5, 152.0], [29.6, 152.0], [29.7, 152.0], [29.8, 152.0], [29.9, 152.0], [30.0, 152.0], [30.1, 152.0], [30.2, 152.0], [30.3, 153.0], [30.4, 153.0], [30.5, 153.0], [30.6, 153.0], [30.7, 153.0], [30.8, 153.0], [30.9, 153.0], [31.0, 153.0], [31.1, 153.0], [31.2, 153.0], [31.3, 153.0], [31.4, 153.0], [31.5, 153.0], [31.6, 153.0], [31.7, 153.0], [31.8, 153.0], [31.9, 153.0], [32.0, 153.0], [32.1, 153.0], [32.2, 153.0], [32.3, 153.0], [32.4, 153.0], [32.5, 153.0], [32.6, 153.0], [32.7, 153.0], [32.8, 154.0], [32.9, 154.0], [33.0, 154.0], [33.1, 154.0], [33.2, 154.0], [33.3, 154.0], [33.4, 154.0], [33.5, 154.0], [33.6, 154.0], [33.7, 154.0], [33.8, 154.0], [33.9, 154.0], [34.0, 154.0], [34.1, 154.0], [34.2, 154.0], [34.3, 154.0], [34.4, 154.0], [34.5, 154.0], [34.6, 154.0], [34.7, 154.0], [34.8, 154.0], [34.9, 154.0], [35.0, 154.0], [35.1, 154.0], [35.2, 154.0], [35.3, 154.0], [35.4, 155.0], [35.5, 155.0], [35.6, 155.0], [35.7, 155.0], [35.8, 155.0], [35.9, 155.0], [36.0, 155.0], [36.1, 155.0], [36.2, 155.0], [36.3, 155.0], [36.4, 155.0], [36.5, 155.0], [36.6, 155.0], [36.7, 155.0], [36.8, 155.0], [36.9, 155.0], [37.0, 155.0], [37.1, 155.0], [37.2, 155.0], [37.3, 155.0], [37.4, 155.0], [37.5, 155.0], [37.6, 155.0], [37.7, 155.0], [37.8, 155.0], [37.9, 155.0], [38.0, 155.0], [38.1, 155.0], [38.2, 155.0], [38.3, 156.0], [38.4, 156.0], [38.5, 156.0], [38.6, 156.0], [38.7, 156.0], [38.8, 156.0], [38.9, 156.0], [39.0, 156.0], [39.1, 156.0], [39.2, 156.0], [39.3, 156.0], [39.4, 156.0], [39.5, 156.0], [39.6, 156.0], [39.7, 156.0], [39.8, 156.0], [39.9, 156.0], [40.0, 156.0], [40.1, 156.0], [40.2, 156.0], [40.3, 156.0], [40.4, 156.0], [40.5, 156.0], [40.6, 156.0], [40.7, 156.0], [40.8, 156.0], [40.9, 157.0], [41.0, 157.0], [41.1, 157.0], [41.2, 157.0], [41.3, 157.0], [41.4, 157.0], [41.5, 157.0], [41.6, 157.0], [41.7, 157.0], [41.8, 157.0], [41.9, 157.0], [42.0, 157.0], [42.1, 157.0], [42.2, 157.0], [42.3, 157.0], [42.4, 157.0], [42.5, 157.0], [42.6, 157.0], [42.7, 157.0], [42.8, 157.0], [42.9, 157.0], [43.0, 157.0], [43.1, 157.0], [43.2, 157.0], [43.3, 157.0], [43.4, 157.0], [43.5, 157.0], [43.6, 157.0], [43.7, 157.0], [43.8, 157.0], [43.9, 157.0], [44.0, 157.0], [44.1, 157.0], [44.2, 157.0], [44.3, 158.0], [44.4, 158.0], [44.5, 158.0], [44.6, 158.0], [44.7, 158.0], [44.8, 158.0], [44.9, 158.0], [45.0, 158.0], [45.1, 158.0], [45.2, 158.0], [45.3, 158.0], [45.4, 158.0], [45.5, 158.0], [45.6, 158.0], [45.7, 158.0], [45.8, 158.0], [45.9, 158.0], [46.0, 158.0], [46.1, 158.0], [46.2, 158.0], [46.3, 158.0], [46.4, 158.0], [46.5, 158.0], [46.6, 158.0], [46.7, 158.0], [46.8, 158.0], [46.9, 158.0], [47.0, 159.0], [47.1, 159.0], [47.2, 159.0], [47.3, 159.0], [47.4, 159.0], [47.5, 159.0], [47.6, 159.0], [47.7, 159.0], [47.8, 159.0], [47.9, 159.0], [48.0, 159.0], [48.1, 159.0], [48.2, 159.0], [48.3, 159.0], [48.4, 159.0], [48.5, 159.0], [48.6, 159.0], [48.7, 159.0], [48.8, 159.0], [48.9, 159.0], [49.0, 159.0], [49.1, 159.0], [49.2, 159.0], [49.3, 159.0], [49.4, 159.0], [49.5, 159.0], [49.6, 159.0], [49.7, 159.0], [49.8, 159.0], [49.9, 159.0], [50.0, 160.0], [50.1, 160.0], [50.2, 160.0], [50.3, 160.0], [50.4, 160.0], [50.5, 160.0], [50.6, 160.0], [50.7, 160.0], [50.8, 160.0], [50.9, 160.0], [51.0, 160.0], [51.1, 160.0], [51.2, 160.0], [51.3, 160.0], [51.4, 160.0], [51.5, 160.0], [51.6, 160.0], [51.7, 160.0], [51.8, 160.0], [51.9, 160.0], [52.0, 160.0], [52.1, 161.0], [52.2, 161.0], [52.3, 161.0], [52.4, 161.0], [52.5, 161.0], [52.6, 161.0], [52.7, 161.0], [52.8, 161.0], [52.9, 161.0], [53.0, 161.0], [53.1, 161.0], [53.2, 161.0], [53.3, 161.0], [53.4, 161.0], [53.5, 161.0], [53.6, 161.0], [53.7, 161.0], [53.8, 161.0], [53.9, 161.0], [54.0, 161.0], [54.1, 161.0], [54.2, 161.0], [54.3, 161.0], [54.4, 161.0], [54.5, 161.0], [54.6, 162.0], [54.7, 162.0], [54.8, 162.0], [54.9, 162.0], [55.0, 162.0], [55.1, 162.0], [55.2, 162.0], [55.3, 162.0], [55.4, 162.0], [55.5, 162.0], [55.6, 162.0], [55.7, 162.0], [55.8, 162.0], [55.9, 162.0], [56.0, 162.0], [56.1, 162.0], [56.2, 162.0], [56.3, 162.0], [56.4, 162.0], [56.5, 162.0], [56.6, 162.0], [56.7, 162.0], [56.8, 162.0], [56.9, 162.0], [57.0, 162.0], [57.1, 163.0], [57.2, 163.0], [57.3, 163.0], [57.4, 163.0], [57.5, 163.0], [57.6, 163.0], [57.7, 163.0], [57.8, 163.0], [57.9, 163.0], [58.0, 163.0], [58.1, 163.0], [58.2, 163.0], [58.3, 163.0], [58.4, 163.0], [58.5, 163.0], [58.6, 163.0], [58.7, 163.0], [58.8, 163.0], [58.9, 163.0], [59.0, 164.0], [59.1, 164.0], [59.2, 164.0], [59.3, 164.0], [59.4, 164.0], [59.5, 164.0], [59.6, 164.0], [59.7, 164.0], [59.8, 164.0], [59.9, 164.0], [60.0, 164.0], [60.1, 164.0], [60.2, 164.0], [60.3, 164.0], [60.4, 164.0], [60.5, 164.0], [60.6, 164.0], [60.7, 164.0], [60.8, 164.0], [60.9, 164.0], [61.0, 164.0], [61.1, 164.0], [61.2, 165.0], [61.3, 165.0], [61.4, 165.0], [61.5, 165.0], [61.6, 165.0], [61.7, 165.0], [61.8, 165.0], [61.9, 165.0], [62.0, 165.0], [62.1, 165.0], [62.2, 165.0], [62.3, 165.0], [62.4, 165.0], [62.5, 165.0], [62.6, 165.0], [62.7, 165.0], [62.8, 165.0], [62.9, 165.0], [63.0, 165.0], [63.1, 165.0], [63.2, 165.0], [63.3, 165.0], [63.4, 166.0], [63.5, 166.0], [63.6, 166.0], [63.7, 166.0], [63.8, 166.0], [63.9, 166.0], [64.0, 166.0], [64.1, 166.0], [64.2, 166.0], [64.3, 166.0], [64.4, 166.0], [64.5, 166.0], [64.6, 166.0], [64.7, 166.0], [64.8, 166.0], [64.9, 166.0], [65.0, 167.0], [65.1, 167.0], [65.2, 167.0], [65.3, 167.0], [65.4, 167.0], [65.5, 167.0], [65.6, 167.0], [65.7, 167.0], [65.8, 167.0], [65.9, 167.0], [66.0, 167.0], [66.1, 167.0], [66.2, 167.0], [66.3, 167.0], [66.4, 167.0], [66.5, 167.0], [66.6, 167.0], [66.7, 167.0], [66.8, 168.0], [66.9, 168.0], [67.0, 168.0], [67.1, 168.0], [67.2, 168.0], [67.3, 168.0], [67.4, 168.0], [67.5, 168.0], [67.6, 168.0], [67.7, 168.0], [67.8, 168.0], [67.9, 168.0], [68.0, 168.0], [68.1, 168.0], [68.2, 169.0], [68.3, 169.0], [68.4, 169.0], [68.5, 169.0], [68.6, 169.0], [68.7, 169.0], [68.8, 169.0], [68.9, 169.0], [69.0, 169.0], [69.1, 169.0], [69.2, 169.0], [69.3, 169.0], [69.4, 169.0], [69.5, 169.0], [69.6, 169.0], [69.7, 169.0], [69.8, 169.0], [69.9, 169.0], [70.0, 170.0], [70.1, 170.0], [70.2, 170.0], [70.3, 170.0], [70.4, 170.0], [70.5, 170.0], [70.6, 170.0], [70.7, 170.0], [70.8, 170.0], [70.9, 170.0], [71.0, 170.0], [71.1, 170.0], [71.2, 170.0], [71.3, 170.0], [71.4, 170.0], [71.5, 170.0], [71.6, 170.0], [71.7, 170.0], [71.8, 170.0], [71.9, 170.0], [72.0, 170.0], [72.1, 170.0], [72.2, 171.0], [72.3, 171.0], [72.4, 171.0], [72.5, 171.0], [72.6, 171.0], [72.7, 171.0], [72.8, 171.0], [72.9, 171.0], [73.0, 171.0], [73.1, 171.0], [73.2, 171.0], [73.3, 171.0], [73.4, 171.0], [73.5, 171.0], [73.6, 171.0], [73.7, 172.0], [73.8, 172.0], [73.9, 172.0], [74.0, 172.0], [74.1, 172.0], [74.2, 172.0], [74.3, 172.0], [74.4, 172.0], [74.5, 172.0], [74.6, 172.0], [74.7, 172.0], [74.8, 172.0], [74.9, 172.0], [75.0, 172.0], [75.1, 172.0], [75.2, 172.0], [75.3, 172.0], [75.4, 172.0], [75.5, 172.0], [75.6, 172.0], [75.7, 173.0], [75.8, 173.0], [75.9, 173.0], [76.0, 173.0], [76.1, 173.0], [76.2, 173.0], [76.3, 173.0], [76.4, 173.0], [76.5, 173.0], [76.6, 173.0], [76.7, 174.0], [76.8, 174.0], [76.9, 174.0], [77.0, 174.0], [77.1, 174.0], [77.2, 174.0], [77.3, 174.0], [77.4, 174.0], [77.5, 174.0], [77.6, 174.0], [77.7, 174.0], [77.8, 174.0], [77.9, 174.0], [78.0, 175.0], [78.1, 175.0], [78.2, 175.0], [78.3, 175.0], [78.4, 175.0], [78.5, 175.0], [78.6, 175.0], [78.7, 175.0], [78.8, 175.0], [78.9, 175.0], [79.0, 175.0], [79.1, 176.0], [79.2, 176.0], [79.3, 176.0], [79.4, 176.0], [79.5, 176.0], [79.6, 176.0], [79.7, 176.0], [79.8, 176.0], [79.9, 176.0], [80.0, 176.0], [80.1, 177.0], [80.2, 177.0], [80.3, 177.0], [80.4, 177.0], [80.5, 177.0], [80.6, 177.0], [80.7, 177.0], [80.8, 177.0], [80.9, 177.0], [81.0, 177.0], [81.1, 177.0], [81.2, 177.0], [81.3, 177.0], [81.4, 178.0], [81.5, 178.0], [81.6, 178.0], [81.7, 178.0], [81.8, 178.0], [81.9, 178.0], [82.0, 178.0], [82.1, 178.0], [82.2, 178.0], [82.3, 178.0], [82.4, 178.0], [82.5, 179.0], [82.6, 179.0], [82.7, 179.0], [82.8, 179.0], [82.9, 179.0], [83.0, 179.0], [83.1, 179.0], [83.2, 179.0], [83.3, 179.0], [83.4, 180.0], [83.5, 180.0], [83.6, 180.0], [83.7, 180.0], [83.8, 180.0], [83.9, 180.0], [84.0, 180.0], [84.1, 181.0], [84.2, 181.0], [84.3, 181.0], [84.4, 181.0], [84.5, 181.0], [84.6, 181.0], [84.7, 181.0], [84.8, 182.0], [84.9, 182.0], [85.0, 182.0], [85.1, 182.0], [85.2, 182.0], [85.3, 182.0], [85.4, 182.0], [85.5, 182.0], [85.6, 183.0], [85.7, 183.0], [85.8, 183.0], [85.9, 183.0], [86.0, 183.0], [86.1, 183.0], [86.2, 183.0], [86.3, 183.0], [86.4, 183.0], [86.5, 184.0], [86.6, 184.0], [86.7, 184.0], [86.8, 184.0], [86.9, 184.0], [87.0, 184.0], [87.1, 185.0], [87.2, 185.0], [87.3, 185.0], [87.4, 185.0], [87.5, 185.0], [87.6, 186.0], [87.7, 186.0], [87.8, 186.0], [87.9, 187.0], [88.0, 187.0], [88.1, 187.0], [88.2, 187.0], [88.3, 188.0], [88.4, 188.0], [88.5, 188.0], [88.6, 188.0], [88.7, 189.0], [88.8, 189.0], [88.9, 189.0], [89.0, 189.0], [89.1, 190.0], [89.2, 190.0], [89.3, 190.0], [89.4, 191.0], [89.5, 191.0], [89.6, 191.0], [89.7, 191.0], [89.8, 191.0], [89.9, 191.0], [90.0, 191.0], [90.1, 192.0], [90.2, 192.0], [90.3, 192.0], [90.4, 192.0], [90.5, 193.0], [90.6, 193.0], [90.7, 194.0], [90.8, 194.0], [90.9, 194.0], [91.0, 194.0], [91.1, 195.0], [91.2, 195.0], [91.3, 195.0], [91.4, 195.0], [91.5, 196.0], [91.6, 196.0], [91.7, 196.0], [91.8, 196.0], [91.9, 196.0], [92.0, 197.0], [92.1, 197.0], [92.2, 197.0], [92.3, 198.0], [92.4, 198.0], [92.5, 198.0], [92.6, 198.0], [92.7, 199.0], [92.8, 200.0], [92.9, 200.0], [93.0, 200.0], [93.1, 201.0], [93.2, 201.0], [93.3, 202.0], [93.4, 202.0], [93.5, 203.0], [93.6, 203.0], [93.7, 204.0], [93.8, 205.0], [93.9, 205.0], [94.0, 206.0], [94.1, 206.0], [94.2, 207.0], [94.3, 208.0], [94.4, 209.0], [94.5, 209.0], [94.6, 209.0], [94.7, 210.0], [94.8, 211.0], [94.9, 212.0], [95.0, 212.0], [95.1, 213.0], [95.2, 213.0], [95.3, 214.0], [95.4, 214.0], [95.5, 215.0], [95.6, 215.0], [95.7, 218.0], [95.8, 219.0], [95.9, 221.0], [96.0, 222.0], [96.1, 224.0], [96.2, 225.0], [96.3, 227.0], [96.4, 231.0], [96.5, 233.0], [96.6, 236.0], [96.7, 238.0], [96.8, 238.0], [96.9, 241.0], [97.0, 243.0], [97.1, 244.0], [97.2, 245.0], [97.3, 246.0], [97.4, 247.0], [97.5, 251.0], [97.6, 255.0], [97.7, 258.0], [97.8, 263.0], [97.9, 267.0], [98.0, 271.0], [98.1, 280.0], [98.2, 290.0], [98.3, 299.0], [98.4, 301.0], [98.5, 324.0], [98.6, 341.0], [98.7, 350.0], [98.8, 377.0], [98.9, 398.0], [99.0, 410.0], [99.1, 434.0], [99.2, 526.0], [99.3, 530.0], [99.4, 532.0], [99.5, 533.0], [99.6, 542.0], [99.7, 559.0], [99.8, 563.0], [99.9, 598.0], [100.0, 726.0]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[0.0, 312.0], [0.1, 328.0], [0.2, 329.0], [0.3, 330.0], [0.4, 331.0], [0.5, 332.0], [0.6, 333.0], [0.7, 334.0], [0.8, 334.0], [0.9, 335.0], [1.0, 335.0], [1.1, 336.0], [1.2, 336.0], [1.3, 337.0], [1.4, 337.0], [1.5, 338.0], [1.6, 339.0], [1.7, 339.0], [1.8, 340.0], [1.9, 340.0], [2.0, 341.0], [2.1, 341.0], [2.2, 341.0], [2.3, 342.0], [2.4, 342.0], [2.5, 342.0], [2.6, 342.0], [2.7, 342.0], [2.8, 343.0], [2.9, 343.0], [3.0, 343.0], [3.1, 344.0], [3.2, 344.0], [3.3, 344.0], [3.4, 345.0], [3.5, 345.0], [3.6, 345.0], [3.7, 346.0], [3.8, 346.0], [3.9, 347.0], [4.0, 347.0], [4.1, 348.0], [4.2, 348.0], [4.3, 348.0], [4.4, 348.0], [4.5, 349.0], [4.6, 349.0], [4.7, 349.0], [4.8, 349.0], [4.9, 349.0], [5.0, 349.0], [5.1, 349.0], [5.2, 350.0], [5.3, 350.0], [5.4, 350.0], [5.5, 350.0], [5.6, 350.0], [5.7, 350.0], [5.8, 350.0], [5.9, 351.0], [6.0, 351.0], [6.1, 351.0], [6.2, 351.0], [6.3, 351.0], [6.4, 352.0], [6.5, 352.0], [6.6, 352.0], [6.7, 352.0], [6.8, 352.0], [6.9, 353.0], [7.0, 353.0], [7.1, 353.0], [7.2, 353.0], [7.3, 353.0], [7.4, 353.0], [7.5, 353.0], [7.6, 354.0], [7.7, 354.0], [7.8, 354.0], [7.9, 354.0], [8.0, 354.0], [8.1, 354.0], [8.2, 354.0], [8.3, 355.0], [8.4, 355.0], [8.5, 355.0], [8.6, 355.0], [8.7, 355.0], [8.8, 355.0], [8.9, 355.0], [9.0, 356.0], [9.1, 356.0], [9.2, 356.0], [9.3, 356.0], [9.4, 356.0], [9.5, 356.0], [9.6, 356.0], [9.7, 357.0], [9.8, 357.0], [9.9, 357.0], [10.0, 357.0], [10.1, 357.0], [10.2, 357.0], [10.3, 358.0], [10.4, 358.0], [10.5, 358.0], [10.6, 358.0], [10.7, 358.0], [10.8, 358.0], [10.9, 358.0], [11.0, 358.0], [11.1, 359.0], [11.2, 359.0], [11.3, 359.0], [11.4, 359.0], [11.5, 359.0], [11.6, 359.0], [11.7, 359.0], [11.8, 359.0], [11.9, 359.0], [12.0, 359.0], [12.1, 360.0], [12.2, 360.0], [12.3, 360.0], [12.4, 360.0], [12.5, 360.0], [12.6, 360.0], [12.7, 360.0], [12.8, 360.0], [12.9, 360.0], [13.0, 361.0], [13.1, 361.0], [13.2, 361.0], [13.3, 361.0], [13.4, 361.0], [13.5, 361.0], [13.6, 361.0], [13.7, 361.0], [13.8, 362.0], [13.9, 362.0], [14.0, 362.0], [14.1, 362.0], [14.2, 362.0], [14.3, 362.0], [14.4, 362.0], [14.5, 362.0], [14.6, 363.0], [14.7, 363.0], [14.8, 363.0], [14.9, 363.0], [15.0, 363.0], [15.1, 363.0], [15.2, 364.0], [15.3, 364.0], [15.4, 364.0], [15.5, 364.0], [15.6, 364.0], [15.7, 364.0], [15.8, 364.0], [15.9, 364.0], [16.0, 364.0], [16.1, 365.0], [16.2, 365.0], [16.3, 365.0], [16.4, 365.0], [16.5, 365.0], [16.6, 365.0], [16.7, 365.0], [16.8, 365.0], [16.9, 365.0], [17.0, 366.0], [17.1, 366.0], [17.2, 366.0], [17.3, 366.0], [17.4, 366.0], [17.5, 366.0], [17.6, 366.0], [17.7, 366.0], [17.8, 366.0], [17.9, 366.0], [18.0, 367.0], [18.1, 367.0], [18.2, 367.0], [18.3, 367.0], [18.4, 367.0], [18.5, 367.0], [18.6, 367.0], [18.7, 367.0], [18.8, 367.0], [18.9, 367.0], [19.0, 367.0], [19.1, 368.0], [19.2, 368.0], [19.3, 368.0], [19.4, 368.0], [19.5, 368.0], [19.6, 368.0], [19.7, 368.0], [19.8, 368.0], [19.9, 368.0], [20.0, 368.0], [20.1, 368.0], [20.2, 368.0], [20.3, 368.0], [20.4, 368.0], [20.5, 369.0], [20.6, 369.0], [20.7, 369.0], [20.8, 369.0], [20.9, 369.0], [21.0, 369.0], [21.1, 369.0], [21.2, 369.0], [21.3, 369.0], [21.4, 369.0], [21.5, 369.0], [21.6, 369.0], [21.7, 370.0], [21.8, 370.0], [21.9, 370.0], [22.0, 370.0], [22.1, 370.0], [22.2, 370.0], [22.3, 370.0], [22.4, 370.0], [22.5, 370.0], [22.6, 370.0], [22.7, 370.0], [22.8, 370.0], [22.9, 370.0], [23.0, 370.0], [23.1, 370.0], [23.2, 370.0], [23.3, 371.0], [23.4, 371.0], [23.5, 371.0], [23.6, 371.0], [23.7, 371.0], [23.8, 371.0], [23.9, 371.0], [24.0, 371.0], [24.1, 371.0], [24.2, 371.0], [24.3, 371.0], [24.4, 372.0], [24.5, 372.0], [24.6, 372.0], [24.7, 372.0], [24.8, 372.0], [24.9, 372.0], [25.0, 372.0], [25.1, 372.0], [25.2, 372.0], [25.3, 373.0], [25.4, 373.0], [25.5, 373.0], [25.6, 373.0], [25.7, 373.0], [25.8, 373.0], [25.9, 373.0], [26.0, 373.0], [26.1, 373.0], [26.2, 374.0], [26.3, 374.0], [26.4, 374.0], [26.5, 374.0], [26.6, 374.0], [26.7, 374.0], [26.8, 374.0], [26.9, 374.0], [27.0, 374.0], [27.1, 374.0], [27.2, 375.0], [27.3, 375.0], [27.4, 375.0], [27.5, 375.0], [27.6, 375.0], [27.7, 375.0], [27.8, 375.0], [27.9, 375.0], [28.0, 375.0], [28.1, 375.0], [28.2, 375.0], [28.3, 375.0], [28.4, 375.0], [28.5, 375.0], [28.6, 375.0], [28.7, 375.0], [28.8, 376.0], [28.9, 376.0], [29.0, 376.0], [29.1, 376.0], [29.2, 376.0], [29.3, 376.0], [29.4, 376.0], [29.5, 376.0], [29.6, 376.0], [29.7, 376.0], [29.8, 376.0], [29.9, 377.0], [30.0, 377.0], [30.1, 377.0], [30.2, 377.0], [30.3, 377.0], [30.4, 377.0], [30.5, 377.0], [30.6, 377.0], [30.7, 377.0], [30.8, 377.0], [30.9, 377.0], [31.0, 377.0], [31.1, 377.0], [31.2, 377.0], [31.3, 377.0], [31.4, 378.0], [31.5, 378.0], [31.6, 378.0], [31.7, 378.0], [31.8, 378.0], [31.9, 378.0], [32.0, 378.0], [32.1, 378.0], [32.2, 378.0], [32.3, 378.0], [32.4, 378.0], [32.5, 378.0], [32.6, 378.0], [32.7, 378.0], [32.8, 379.0], [32.9, 379.0], [33.0, 379.0], [33.1, 379.0], [33.2, 379.0], [33.3, 379.0], [33.4, 379.0], [33.5, 379.0], [33.6, 379.0], [33.7, 379.0], [33.8, 379.0], [33.9, 379.0], [34.0, 379.0], [34.1, 379.0], [34.2, 379.0], [34.3, 379.0], [34.4, 380.0], [34.5, 380.0], [34.6, 380.0], [34.7, 380.0], [34.8, 380.0], [34.9, 380.0], [35.0, 380.0], [35.1, 380.0], [35.2, 380.0], [35.3, 380.0], [35.4, 380.0], [35.5, 380.0], [35.6, 381.0], [35.7, 381.0], [35.8, 381.0], [35.9, 381.0], [36.0, 381.0], [36.1, 381.0], [36.2, 381.0], [36.3, 381.0], [36.4, 381.0], [36.5, 381.0], [36.6, 381.0], [36.7, 381.0], [36.8, 381.0], [36.9, 381.0], [37.0, 382.0], [37.1, 382.0], [37.2, 382.0], [37.3, 382.0], [37.4, 382.0], [37.5, 382.0], [37.6, 382.0], [37.7, 382.0], [37.8, 382.0], [37.9, 382.0], [38.0, 382.0], [38.1, 383.0], [38.2, 383.0], [38.3, 383.0], [38.4, 383.0], [38.5, 383.0], [38.6, 383.0], [38.7, 383.0], [38.8, 383.0], [38.9, 383.0], [39.0, 383.0], [39.1, 383.0], [39.2, 383.0], [39.3, 383.0], [39.4, 383.0], [39.5, 384.0], [39.6, 384.0], [39.7, 384.0], [39.8, 384.0], [39.9, 384.0], [40.0, 384.0], [40.1, 384.0], [40.2, 384.0], [40.3, 384.0], [40.4, 384.0], [40.5, 384.0], [40.6, 384.0], [40.7, 384.0], [40.8, 384.0], [40.9, 385.0], [41.0, 385.0], [41.1, 385.0], [41.2, 385.0], [41.3, 385.0], [41.4, 385.0], [41.5, 385.0], [41.6, 385.0], [41.7, 385.0], [41.8, 385.0], [41.9, 385.0], [42.0, 386.0], [42.1, 386.0], [42.2, 386.0], [42.3, 386.0], [42.4, 386.0], [42.5, 386.0], [42.6, 386.0], [42.7, 386.0], [42.8, 386.0], [42.9, 386.0], [43.0, 386.0], [43.1, 386.0], [43.2, 387.0], [43.3, 387.0], [43.4, 387.0], [43.5, 387.0], [43.6, 387.0], [43.7, 387.0], [43.8, 387.0], [43.9, 387.0], [44.0, 387.0], [44.1, 387.0], [44.2, 387.0], [44.3, 387.0], [44.4, 387.0], [44.5, 387.0], [44.6, 387.0], [44.7, 388.0], [44.8, 388.0], [44.9, 388.0], [45.0, 388.0], [45.1, 388.0], [45.2, 388.0], [45.3, 388.0], [45.4, 389.0], [45.5, 389.0], [45.6, 389.0], [45.7, 389.0], [45.8, 389.0], [45.9, 389.0], [46.0, 389.0], [46.1, 389.0], [46.2, 389.0], [46.3, 389.0], [46.4, 390.0], [46.5, 390.0], [46.6, 390.0], [46.7, 390.0], [46.8, 390.0], [46.9, 390.0], [47.0, 390.0], [47.1, 390.0], [47.2, 390.0], [47.3, 390.0], [47.4, 390.0], [47.5, 390.0], [47.6, 391.0], [47.7, 391.0], [47.8, 391.0], [47.9, 391.0], [48.0, 391.0], [48.1, 391.0], [48.2, 391.0], [48.3, 391.0], [48.4, 391.0], [48.5, 391.0], [48.6, 391.0], [48.7, 392.0], [48.8, 392.0], [48.9, 392.0], [49.0, 392.0], [49.1, 392.0], [49.2, 392.0], [49.3, 392.0], [49.4, 392.0], [49.5, 392.0], [49.6, 392.0], [49.7, 392.0], [49.8, 392.0], [49.9, 392.0], [50.0, 392.0], [50.1, 393.0], [50.2, 393.0], [50.3, 393.0], [50.4, 393.0], [50.5, 393.0], [50.6, 393.0], [50.7, 393.0], [50.8, 393.0], [50.9, 393.0], [51.0, 393.0], [51.1, 393.0], [51.2, 393.0], [51.3, 393.0], [51.4, 393.0], [51.5, 393.0], [51.6, 394.0], [51.7, 394.0], [51.8, 394.0], [51.9, 394.0], [52.0, 394.0], [52.1, 394.0], [52.2, 394.0], [52.3, 394.0], [52.4, 394.0], [52.5, 395.0], [52.6, 395.0], [52.7, 395.0], [52.8, 395.0], [52.9, 395.0], [53.0, 395.0], [53.1, 395.0], [53.2, 395.0], [53.3, 396.0], [53.4, 396.0], [53.5, 396.0], [53.6, 396.0], [53.7, 396.0], [53.8, 396.0], [53.9, 396.0], [54.0, 396.0], [54.1, 396.0], [54.2, 396.0], [54.3, 397.0], [54.4, 397.0], [54.5, 397.0], [54.6, 397.0], [54.7, 397.0], [54.8, 397.0], [54.9, 397.0], [55.0, 397.0], [55.1, 397.0], [55.2, 397.0], [55.3, 397.0], [55.4, 398.0], [55.5, 398.0], [55.6, 398.0], [55.7, 398.0], [55.8, 398.0], [55.9, 398.0], [56.0, 398.0], [56.1, 398.0], [56.2, 398.0], [56.3, 398.0], [56.4, 398.0], [56.5, 398.0], [56.6, 398.0], [56.7, 398.0], [56.8, 398.0], [56.9, 398.0], [57.0, 399.0], [57.1, 399.0], [57.2, 399.0], [57.3, 399.0], [57.4, 399.0], [57.5, 399.0], [57.6, 399.0], [57.7, 399.0], [57.8, 399.0], [57.9, 399.0], [58.0, 399.0], [58.1, 399.0], [58.2, 400.0], [58.3, 400.0], [58.4, 400.0], [58.5, 400.0], [58.6, 400.0], [58.7, 400.0], [58.8, 400.0], [58.9, 400.0], [59.0, 400.0], [59.1, 400.0], [59.2, 400.0], [59.3, 400.0], [59.4, 401.0], [59.5, 401.0], [59.6, 401.0], [59.7, 401.0], [59.8, 401.0], [59.9, 401.0], [60.0, 401.0], [60.1, 401.0], [60.2, 401.0], [60.3, 401.0], [60.4, 401.0], [60.5, 402.0], [60.6, 402.0], [60.7, 402.0], [60.8, 402.0], [60.9, 402.0], [61.0, 402.0], [61.1, 402.0], [61.2, 403.0], [61.3, 403.0], [61.4, 403.0], [61.5, 403.0], [61.6, 403.0], [61.7, 403.0], [61.8, 403.0], [61.9, 403.0], [62.0, 403.0], [62.1, 404.0], [62.2, 404.0], [62.3, 404.0], [62.4, 404.0], [62.5, 404.0], [62.6, 404.0], [62.7, 404.0], [62.8, 404.0], [62.9, 404.0], [63.0, 404.0], [63.1, 404.0], [63.2, 405.0], [63.3, 405.0], [63.4, 405.0], [63.5, 405.0], [63.6, 405.0], [63.7, 405.0], [63.8, 405.0], [63.9, 406.0], [64.0, 406.0], [64.1, 406.0], [64.2, 406.0], [64.3, 406.0], [64.4, 406.0], [64.5, 406.0], [64.6, 406.0], [64.7, 407.0], [64.8, 407.0], [64.9, 407.0], [65.0, 407.0], [65.1, 407.0], [65.2, 407.0], [65.3, 407.0], [65.4, 407.0], [65.5, 407.0], [65.6, 408.0], [65.7, 408.0], [65.8, 408.0], [65.9, 408.0], [66.0, 408.0], [66.1, 408.0], [66.2, 408.0], [66.3, 408.0], [66.4, 408.0], [66.5, 408.0], [66.6, 408.0], [66.7, 408.0], [66.8, 408.0], [66.9, 408.0], [67.0, 409.0], [67.1, 409.0], [67.2, 409.0], [67.3, 409.0], [67.4, 409.0], [67.5, 409.0], [67.6, 409.0], [67.7, 409.0], [67.8, 409.0], [67.9, 409.0], [68.0, 410.0], [68.1, 410.0], [68.2, 410.0], [68.3, 410.0], [68.4, 410.0], [68.5, 410.0], [68.6, 410.0], [68.7, 411.0], [68.8, 411.0], [68.9, 411.0], [69.0, 411.0], [69.1, 411.0], [69.2, 411.0], [69.3, 411.0], [69.4, 412.0], [69.5, 412.0], [69.6, 412.0], [69.7, 412.0], [69.8, 412.0], [69.9, 412.0], [70.0, 412.0], [70.1, 412.0], [70.2, 413.0], [70.3, 413.0], [70.4, 413.0], [70.5, 413.0], [70.6, 413.0], [70.7, 413.0], [70.8, 413.0], [70.9, 413.0], [71.0, 413.0], [71.1, 413.0], [71.2, 414.0], [71.3, 414.0], [71.4, 414.0], [71.5, 414.0], [71.6, 414.0], [71.7, 414.0], [71.8, 414.0], [71.9, 414.0], [72.0, 415.0], [72.1, 415.0], [72.2, 415.0], [72.3, 415.0], [72.4, 416.0], [72.5, 416.0], [72.6, 416.0], [72.7, 416.0], [72.8, 416.0], [72.9, 416.0], [73.0, 417.0], [73.1, 417.0], [73.2, 417.0], [73.3, 417.0], [73.4, 417.0], [73.5, 417.0], [73.6, 417.0], [73.7, 417.0], [73.8, 417.0], [73.9, 417.0], [74.0, 418.0], [74.1, 418.0], [74.2, 418.0], [74.3, 418.0], [74.4, 418.0], [74.5, 418.0], [74.6, 418.0], [74.7, 419.0], [74.8, 419.0], [74.9, 419.0], [75.0, 419.0], [75.1, 419.0], [75.2, 419.0], [75.3, 420.0], [75.4, 420.0], [75.5, 420.0], [75.6, 420.0], [75.7, 420.0], [75.8, 420.0], [75.9, 420.0], [76.0, 420.0], [76.1, 421.0], [76.2, 421.0], [76.3, 421.0], [76.4, 422.0], [76.5, 422.0], [76.6, 422.0], [76.7, 422.0], [76.8, 422.0], [76.9, 422.0], [77.0, 423.0], [77.1, 423.0], [77.2, 423.0], [77.3, 424.0], [77.4, 424.0], [77.5, 424.0], [77.6, 424.0], [77.7, 424.0], [77.8, 424.0], [77.9, 424.0], [78.0, 425.0], [78.1, 425.0], [78.2, 425.0], [78.3, 425.0], [78.4, 425.0], [78.5, 425.0], [78.6, 426.0], [78.7, 426.0], [78.8, 426.0], [78.9, 426.0], [79.0, 426.0], [79.1, 427.0], [79.2, 427.0], [79.3, 427.0], [79.4, 427.0], [79.5, 428.0], [79.6, 428.0], [79.7, 428.0], [79.8, 428.0], [79.9, 428.0], [80.0, 429.0], [80.1, 429.0], [80.2, 429.0], [80.3, 429.0], [80.4, 429.0], [80.5, 429.0], [80.6, 429.0], [80.7, 430.0], [80.8, 430.0], [80.9, 430.0], [81.0, 430.0], [81.1, 430.0], [81.2, 430.0], [81.3, 431.0], [81.4, 431.0], [81.5, 431.0], [81.6, 431.0], [81.7, 431.0], [81.8, 432.0], [81.9, 432.0], [82.0, 432.0], [82.1, 432.0], [82.2, 432.0], [82.3, 433.0], [82.4, 433.0], [82.5, 434.0], [82.6, 434.0], [82.7, 434.0], [82.8, 434.0], [82.9, 434.0], [83.0, 435.0], [83.1, 435.0], [83.2, 435.0], [83.3, 435.0], [83.4, 435.0], [83.5, 436.0], [83.6, 436.0], [83.7, 437.0], [83.8, 437.0], [83.9, 437.0], [84.0, 437.0], [84.1, 438.0], [84.2, 438.0], [84.3, 439.0], [84.4, 439.0], [84.5, 439.0], [84.6, 439.0], [84.7, 440.0], [84.8, 440.0], [84.9, 440.0], [85.0, 440.0], [85.1, 440.0], [85.2, 440.0], [85.3, 441.0], [85.4, 441.0], [85.5, 441.0], [85.6, 441.0], [85.7, 441.0], [85.8, 441.0], [85.9, 441.0], [86.0, 442.0], [86.1, 442.0], [86.2, 443.0], [86.3, 443.0], [86.4, 443.0], [86.5, 443.0], [86.6, 443.0], [86.7, 444.0], [86.8, 444.0], [86.9, 444.0], [87.0, 445.0], [87.1, 445.0], [87.2, 446.0], [87.3, 446.0], [87.4, 447.0], [87.5, 447.0], [87.6, 448.0], [87.7, 448.0], [87.8, 448.0], [87.9, 448.0], [88.0, 449.0], [88.1, 449.0], [88.2, 450.0], [88.3, 450.0], [88.4, 451.0], [88.5, 451.0], [88.6, 452.0], [88.7, 452.0], [88.8, 453.0], [88.9, 453.0], [89.0, 453.0], [89.1, 454.0], [89.2, 454.0], [89.3, 454.0], [89.4, 454.0], [89.5, 455.0], [89.6, 456.0], [89.7, 456.0], [89.8, 456.0], [89.9, 456.0], [90.0, 457.0], [90.1, 457.0], [90.2, 457.0], [90.3, 459.0], [90.4, 460.0], [90.5, 460.0], [90.6, 460.0], [90.7, 461.0], [90.8, 461.0], [90.9, 461.0], [91.0, 462.0], [91.1, 462.0], [91.2, 463.0], [91.3, 463.0], [91.4, 464.0], [91.5, 464.0], [91.6, 465.0], [91.7, 466.0], [91.8, 466.0], [91.9, 466.0], [92.0, 467.0], [92.1, 468.0], [92.2, 469.0], [92.3, 470.0], [92.4, 471.0], [92.5, 471.0], [92.6, 472.0], [92.7, 472.0], [92.8, 473.0], [92.9, 473.0], [93.0, 474.0], [93.1, 475.0], [93.2, 476.0], [93.3, 477.0], [93.4, 480.0], [93.5, 481.0], [93.6, 482.0], [93.7, 484.0], [93.8, 485.0], [93.9, 485.0], [94.0, 487.0], [94.1, 488.0], [94.2, 489.0], [94.3, 490.0], [94.4, 494.0], [94.5, 496.0], [94.6, 497.0], [94.7, 497.0], [94.8, 500.0], [94.9, 501.0], [95.0, 503.0], [95.1, 507.0], [95.2, 507.0], [95.3, 509.0], [95.4, 510.0], [95.5, 513.0], [95.6, 519.0], [95.7, 520.0], [95.8, 523.0], [95.9, 525.0], [96.0, 528.0], [96.1, 532.0], [96.2, 537.0], [96.3, 539.0], [96.4, 540.0], [96.5, 547.0], [96.6, 550.0], [96.7, 554.0], [96.8, 557.0], [96.9, 565.0], [97.0, 577.0], [97.1, 580.0], [97.2, 585.0], [97.3, 594.0], [97.4, 602.0], [97.5, 610.0], [97.6, 613.0], [97.7, 622.0], [97.8, 631.0], [97.9, 638.0], [98.0, 643.0], [98.1, 648.0], [98.2, 694.0], [98.3, 707.0], [98.4, 773.0], [98.5, 787.0], [98.6, 806.0], [98.7, 832.0], [98.8, 843.0], [98.9, 872.0], [99.0, 915.0], [99.1, 1413.0], [99.2, 1494.0], [99.3, 1671.0], [99.4, 1763.0], [99.5, 1783.0], [99.6, 1794.0], [99.7, 1818.0], [99.8, 2042.0], [99.9, 9071.0], [100.0, 11508.0]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 1947.0, "series": [{"data": [[600.0, 12.0], [200.0, 1919.0], [800.0, 3.0], [900.0, 3.0], [1000.0, 2.0], [1100.0, 1.0], [300.0, 69.0], [1200.0, 2.0], [1400.0, 1.0], [1500.0, 1.0], [400.0, 16.0], [100.0, 50.0], [6400.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [500.0, 18.0]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[600.0, 393.0], [700.0, 168.0], [800.0, 84.0], [900.0, 79.0], [1000.0, 49.0], [1100.0, 25.0], [1200.0, 16.0], [1300.0, 9.0], [1400.0, 9.0], [1500.0, 1.0], [6900.0, 1.0], [1900.0, 1.0], [500.0, 1263.0], [8000.0, 1.0], [2000.0, 1.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[300.0, 12.0], [600.0, 1.0], [700.0, 1.0], [200.0, 119.0], [100.0, 1947.0], [400.0, 4.0], [500.0, 16.0]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[9000.0, 1.0], [600.0, 19.0], [10200.0, 1.0], [700.0, 6.0], [11500.0, 1.0], [800.0, 9.0], [900.0, 2.0], [1000.0, 1.0], [300.0, 1222.0], [1400.0, 3.0], [400.0, 768.0], [1600.0, 3.0], [1700.0, 5.0], [1800.0, 2.0], [1900.0, 1.0], [2000.0, 2.0], [500.0, 54.0]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 25.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6128.0, "series": [{"data": [[0.0, 6128.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2247.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 25.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.568817204301074, "minX": 1.6377408E12, "maxY": 7.0, "series": [{"data": [[1.63774104E12, 7.0], [1.63774122E12, 6.568817204301074], [1.63774092E12, 7.0], [1.6377411E12, 7.0], [1.6377408E12, 7.0], [1.63774098E12, 7.0], [1.63774116E12, 7.0], [1.63774086E12, 7.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774122E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 147.5, "minX": 1.0, "maxY": 653.0, "series": [{"data": [[4.0, 212.0], [2.0, 232.66666666666666], [1.0, 237.2], [5.0, 223.125], [6.0, 237.5], [3.0, 226.09999999999997], [7.0, 251.9550724637683]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[6.948095238095236, 251.6076190476192]], "isOverall": false, "label": "Get aws/sts-Aggregated", "isController": false}, {"data": [[4.0, 587.0], [2.0, 533.5], [1.0, 533.0], [5.0, 653.0], [6.0, 598.0], [3.0, 546.0], [7.0, 648.8078223080637]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[6.949523809523808, 647.8480952380953]], "isOverall": false, "label": "Get Phos-Aggregated", "isController": false}, {"data": [[4.0, 154.0], [2.0, 154.0], [1.0, 148.0], [5.0, 164.5], [6.0, 147.5], [3.0, 161.9], [7.0, 169.59980713596894]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[6.955238095238094, 169.45666666666642]], "isOverall": false, "label": "Get Covid Exposure site-Aggregated", "isController": false}, {"data": [[2.0, 412.0], [1.0, 359.25], [5.0, 388.375], [6.0, 369.0], [3.0, 378.0], [7.0, 429.10752169720297]], "isOverall": false, "label": "Login  Request", "isController": false}, {"data": [[6.956190476190477, 428.50238095238046]], "isOverall": false, "label": "Login  Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 7.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5368.25, "minX": 1.6377408E12, "maxY": 45438.7, "series": [{"data": [[1.63774104E12, 41955.1], [1.63774122E12, 35344.51666666667], [1.63774092E12, 44087.76666666667], [1.6377411E12, 40147.55], [1.6377408E12, 25726.166666666668], [1.63774098E12, 44804.083333333336], [1.63774116E12, 40156.11666666667], [1.63774086E12, 45438.7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63774104E12, 8726.283333333333], [1.63774122E12, 7300.966666666666], [1.63774092E12, 9127.433333333332], [1.6377411E12, 8366.916666666666], [1.6377408E12, 5368.25], [1.63774098E12, 9319.766666666666], [1.63774116E12, 8308.666666666666], [1.63774086E12, 9456.716666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774122E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 160.88172043010763, "minX": 1.6377408E12, "maxY": 765.1992481203008, "series": [{"data": [[1.63774104E12, 268.8884892086329], [1.63774122E12, 251.9489361702128], [1.63774092E12, 247.69310344827588], [1.6377411E12, 246.4830188679245], [1.6377408E12, 273.62500000000006], [1.63774098E12, 240.39597315436248], [1.63774116E12, 245.60754716981134], [1.63774086E12, 247.7574750830565]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1.63774104E12, 664.5956678700363], [1.63774122E12, 589.3717948717951], [1.63774092E12, 581.9931506849313], [1.6377411E12, 753.2905660377356], [1.6377408E12, 681.094117647059], [1.63774098E12, 596.2567567567564], [1.63774116E12, 765.1992481203008], [1.63774086E12, 576.9666666666666]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[1.63774104E12, 160.88172043010763], [1.63774122E12, 170.06926406926402], [1.63774092E12, 171.50344827586207], [1.6377411E12, 168.31716417910454], [1.6377408E12, 170.84883720930222], [1.63774098E12, 173.90169491525424], [1.63774116E12, 168.92395437262354], [1.63774086E12, 171.28476821192044]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[1.63774104E12, 413.11191335740057], [1.63774122E12, 394.0478260869566], [1.63774092E12, 440.8344827586206], [1.6377411E12, 408.8426966292135], [1.6377408E12, 628.2947976878614], [1.63774098E12, 405.9496644295302], [1.63774116E12, 406.5568181818182], [1.63774086E12, 401.29568106312286]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774122E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 160.86379928315404, "minX": 1.6377408E12, "maxY": 764.4849624060155, "series": [{"data": [[1.63774104E12, 268.88129496402854], [1.63774122E12, 251.9276595744681], [1.63774092E12, 247.67586206896556], [1.6377411E12, 246.4716981132076], [1.6377408E12, 273.55357142857133], [1.63774098E12, 240.3791946308725], [1.63774116E12, 245.57735849056607], [1.63774086E12, 247.71096345514945]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1.63774104E12, 660.6281588447653], [1.63774122E12, 588.0427350427346], [1.63774092E12, 581.2705479452051], [1.6377411E12, 752.5547169811321], [1.6377408E12, 680.2176470588237], [1.63774098E12, 587.1385135135139], [1.63774116E12, 764.4849624060155], [1.63774086E12, 576.16]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[1.63774104E12, 160.86379928315404], [1.63774122E12, 170.0562770562771], [1.63774092E12, 171.48275862068965], [1.6377411E12, 168.30223880597015], [1.6377408E12, 170.78488372093017], [1.63774098E12, 173.89830508474574], [1.63774116E12, 168.90874524714846], [1.63774086E12, 171.2350993377483]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[1.63774104E12, 413.10108303249115], [1.63774122E12, 394.0434782608699], [1.63774092E12, 440.8034482758618], [1.6377411E12, 408.8314606741572], [1.6377408E12, 628.1965317919074], [1.63774098E12, 405.9328859060401], [1.63774116E12, 406.5378787878789], [1.63774086E12, 401.2691029900333]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774122E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6377408E12, "maxY": 52.01156069364163, "series": [{"data": [[1.63774104E12, 4.215827338129502], [1.63774122E12, 4.902127659574469], [1.63774092E12, 2.665517241379312], [1.6377411E12, 1.430188679245282], [1.6377408E12, 0.0], [1.63774098E12, 3.822147651006709], [1.63774116E12, 4.260377358490566], [1.63774086E12, 3.850498338870435]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1.63774104E12, 4.57761732851985], [1.63774122E12, 3.226495726495726], [1.63774092E12, 4.27397260273973], [1.6377411E12, 1.3924528301886796], [1.6377408E12, 0.0], [1.63774098E12, 1.4425675675675682], [1.63774116E12, 0.0], [1.63774086E12, 2.659999999999999]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[1.63774104E12, 0.0], [1.63774122E12, 3.311688311688312], [1.63774092E12, 2.662068965517244], [1.6377411E12, 4.220149253731345], [1.6377408E12, 0.0], [1.63774098E12, 3.881355932203386], [1.63774116E12, 1.4144486692015206], [1.63774086E12, 2.682119205298014]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[1.63774104E12, 4.2888086642599275], [1.63774122E12, 0.0], [1.63774092E12, 1.4827586206896548], [1.6377411E12, 3.1235955056179785], [1.6377408E12, 52.01156069364163], [1.63774098E12, 0.0], [1.63774116E12, 5.094696969696975], [1.63774086E12, 0.0]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774122E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 138.0, "minX": 1.6377408E12, "maxY": 11508.0, "series": [{"data": [[1.63774104E12, 6482.0], [1.63774122E12, 1497.0], [1.63774092E12, 1927.0], [1.6377411E12, 1800.0], [1.6377408E12, 11508.0], [1.63774098E12, 2025.0], [1.63774116E12, 1536.0], [1.63774086E12, 1448.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63774104E12, 663.0], [1.63774122E12, 584.0], [1.63774092E12, 567.7], [1.6377411E12, 787.8], [1.6377408E12, 606.0], [1.63774098E12, 569.2], [1.63774116E12, 772.2], [1.63774086E12, 570.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63774104E12, 1079.7199999999978], [1.63774122E12, 868.1799999999987], [1.63774092E12, 1149.4299999999957], [1.6377411E12, 1144.3599999999997], [1.6377408E12, 2048.3999999999987], [1.63774098E12, 836.2799999999979], [1.63774116E12, 1324.1200000000026], [1.63774086E12, 763.6000000000004]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63774104E12, 795.999999999998], [1.63774122E12, 628.4499999999999], [1.63774092E12, 629.8499999999999], [1.6377411E12, 949.3999999999999], [1.6377408E12, 674.7999999999997], [1.63774098E12, 656.5999999999999], [1.63774116E12, 988.05], [1.63774086E12, 608.75]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63774104E12, 139.0], [1.63774122E12, 140.0], [1.63774092E12, 141.0], [1.6377411E12, 141.0], [1.6377408E12, 138.0], [1.63774098E12, 141.0], [1.63774116E12, 141.0], [1.63774086E12, 140.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63774104E12, 349.0], [1.63774122E12, 339.0], [1.63774092E12, 357.5], [1.6377411E12, 343.0], [1.6377408E12, 361.0], [1.63774098E12, 350.0], [1.63774116E12, 350.0], [1.63774086E12, 349.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774122E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 241.0, "minX": 2.0, "maxY": 475.0, "series": [{"data": [[8.0, 379.0], [2.0, 385.0], [9.0, 317.0], [10.0, 345.0], [11.0, 360.5], [12.0, 376.0], [3.0, 241.0], [13.0, 336.0], [14.0, 373.5], [15.0, 400.0], [16.0, 352.5], [4.0, 287.5], [17.0, 349.0], [18.0, 342.0], [19.0, 350.5], [20.0, 349.5], [21.0, 349.0], [22.0, 340.0], [23.0, 270.5], [24.0, 344.0], [6.0, 307.5], [26.0, 316.0], [7.0, 475.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 26.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 241.0, "minX": 2.0, "maxY": 474.5, "series": [{"data": [[8.0, 379.0], [2.0, 385.0], [9.0, 317.0], [10.0, 345.0], [11.0, 360.5], [12.0, 376.0], [3.0, 241.0], [13.0, 336.0], [14.0, 373.5], [15.0, 400.0], [16.0, 352.5], [4.0, 287.5], [17.0, 349.0], [18.0, 342.0], [19.0, 350.5], [20.0, 349.5], [21.0, 349.0], [22.0, 340.0], [23.0, 270.5], [24.0, 344.0], [6.0, 307.5], [26.0, 316.0], [7.0, 474.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 26.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 11.5, "minX": 1.6377408E12, "maxY": 20.066666666666666, "series": [{"data": [[1.63774104E12, 18.516666666666666], [1.63774122E12, 15.383333333333333], [1.63774092E12, 19.366666666666667], [1.6377411E12, 17.75], [1.6377408E12, 11.5], [1.63774098E12, 19.783333333333335], [1.63774116E12, 17.633333333333333], [1.63774086E12, 20.066666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774122E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.8833333333333333, "minX": 1.6377408E12, "maxY": 15.05, "series": [{"data": [[1.63774104E12, 13.9], [1.63774122E12, 11.666666666666666], [1.63774092E12, 14.533333333333333], [1.6377411E12, 13.3], [1.6377408E12, 8.5], [1.63774098E12, 14.816666666666666], [1.63774116E12, 13.233333333333333], [1.63774086E12, 15.05]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.63774104E12, 4.616666666666666], [1.63774122E12, 3.8333333333333335], [1.63774092E12, 4.833333333333333], [1.6377411E12, 4.45], [1.6377408E12, 2.8833333333333333], [1.63774098E12, 4.966666666666667], [1.63774116E12, 4.4], [1.63774086E12, 5.016666666666667]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774122E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.8, "minX": 1.6377408E12, "maxY": 5.033333333333333, "series": [{"data": [[1.63774104E12, 4.616666666666666], [1.63774122E12, 3.8333333333333335], [1.63774092E12, 4.833333333333333], [1.6377411E12, 4.45], [1.6377408E12, 2.8833333333333333], [1.63774098E12, 4.966666666666667], [1.63774116E12, 4.4], [1.63774086E12, 5.016666666666667]], "isOverall": false, "label": "Login  Request-success", "isController": false}, {"data": [[1.63774104E12, 4.65], [1.63774122E12, 3.85], [1.63774092E12, 4.833333333333333], [1.6377411E12, 4.466666666666667], [1.6377408E12, 2.8666666666666667], [1.63774098E12, 4.916666666666667], [1.63774116E12, 4.383333333333334], [1.63774086E12, 5.033333333333333]], "isOverall": false, "label": "Get Covid Exposure site-success", "isController": false}, {"data": [[1.63774104E12, 4.633333333333334], [1.63774122E12, 3.9166666666666665], [1.63774092E12, 4.833333333333333], [1.6377411E12, 4.416666666666667], [1.6377408E12, 2.8], [1.63774098E12, 4.966666666666667], [1.63774116E12, 4.416666666666667], [1.63774086E12, 5.016666666666667]], "isOverall": false, "label": "Get aws/sts-success", "isController": false}, {"data": [[1.63774104E12, 4.616666666666666], [1.63774122E12, 3.9], [1.63774092E12, 4.866666666666666], [1.6377411E12, 4.416666666666667], [1.6377408E12, 2.8333333333333335], [1.63774098E12, 4.933333333333334], [1.63774116E12, 4.433333333333334], [1.63774086E12, 5.0]], "isOverall": false, "label": "Get Phos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774122E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 11.383333333333333, "minX": 1.6377408E12, "maxY": 20.066666666666666, "series": [{"data": [[1.63774104E12, 18.516666666666666], [1.63774122E12, 15.5], [1.63774092E12, 19.366666666666667], [1.6377411E12, 17.75], [1.6377408E12, 11.383333333333333], [1.63774098E12, 19.783333333333335], [1.63774116E12, 17.633333333333333], [1.63774086E12, 20.066666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774122E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

